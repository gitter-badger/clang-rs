var searchIndex = {};
searchIndex['clang'] = {"items":[[0,"","clang","Bindings and idiomatic wrapper for `libclang`.",null,null],[3,"Clang","","An empty type which prevents the use of this library from multiple threads simultaneously.",null,null],[3,"CompilationDatabase","","The information used to compile the source files in a project.",null,null],[3,"CompileCommand","","The information used to compile a source file in a project.",null,null],[3,"CompletionContext","","Indicates which types of results were included in a set of code completion results.",null,null],[12,"all_types","","Indicates whether all possible types were included.",0,null],[12,"all_values","","Indicates whether all possible values were included.",0,null],[12,"class_type_values","","Indicates whether values that resolve to C++ class types were included.",0,null],[12,"dot_members","","Indicates whether the members of a record that are accessed with the dot operator were\nincluded.",0,null],[12,"arrow_members","","Indicates whether the members of a record that are accessed with the arrow operator were\nincluded.",0,null],[12,"enum_tags","","Indicates whether enum tags were included.",0,null],[12,"union_tags","","Indicates whether union tags were included.",0,null],[12,"struct_tags","","Indicates whether struct tags were included.",0,null],[12,"class_names","","Indicates whether C++ class names were included.",0,null],[12,"namespaces","","Indicates whether C++ namespaces and namespace aliases were included.",0,null],[12,"nested_name_specifiers","","Indicates whether C++ nested name specifiers were included.",0,null],[12,"macro_names","","Indicates whether macro names were included.",0,null],[12,"natural_language","","Indicates whether natural language results were included.",0,null],[12,"objc_object_values","","Indicates whether values that resolve to Objective-C objects were included.",0,null],[12,"objc_selector_values","","Indicates whether values that resolve to Objective-C selectors were included.",0,null],[12,"objc_property_members","","Indicates whether the properties of an Objective-C object that are accessed with the dot\noperator were included.",0,null],[12,"objc_interfaces","","Indicates whether Objective-C interfaces were included.",0,null],[12,"objc_protocols","","Indicates whether Objective-C protocols were included.",0,null],[12,"objc_categories","","Indicates whether Objective-C categories were included.",0,null],[12,"objc_instance_messages","","Indicates whether Objective-C instance messages were included.",0,null],[12,"objc_class_messages","","Indicates whether Objective-C class messages were included.",0,null],[12,"objc_selector_names","","Indicates whether Objective-C selector names were included.",0,null],[3,"CompletionOptions","","A set of options that determines how code completion is run.",null,null],[12,"macros","","Indicates whether macros will be included in code completion results.",1,null],[12,"code_patterns","","Indicates whether code patterns (e.g., for loops) will be included in code completion\nresults.",1,null],[12,"briefs","","Indicates whether documentation comment briefs will be included in code completion\nresults.",1,null],[3,"CompletionResult","","A code completion result.",null,null],[3,"CompletionResults","","A set of code completion results.",null,null],[3,"CompletionString","","A semantic string that describes a code completion result.",null,null],[3,"Diagnostic","","A message from the compiler about an issue with a source file.",null,null],[3,"Entity","","An AST entity.",null,null],[3,"File","","A source file.",null,null],[3,"FormatOptions","","A set of options that determines how a diagnostic is formatted.",null,null],[12,"source_location","","Indicates whether the diagnostic text will be prefixed by the file and line of the\nsource location the diagnostic indicates. This prefix may also contain column and/or\nsource range information.",2,null],[12,"column","","Indicates whether the column will be included in the source location prefix.",2,null],[12,"source_ranges","","Indicates whether the source ranges will be included to the source location prefix.",2,null],[12,"option","","Indicates whether the option associated with the diagnostic (e.g., `-Wconversion`) will\nbe placed in brackets after the diagnostic text if there is such an option.",2,null],[12,"category_id","","Indicates whether the category number associated with the diagnostic will be placed in\nbrackets after the diagnostic text if there is such a category number.",2,null],[12,"category_name","","Indicates whether the category name associated with the diagnostic will be placed in\nbrackets after the diagnostic text if there is such a category name.",2,null],[3,"Index","","A collection of translation units.",null,null],[3,"Location","","The file, line, column, and character offset of a source location.",null,null],[12,"file","","The file of the source location.",3,null],[12,"line","","The line of the source location.",3,null],[12,"column","","The column of the source location.",3,null],[12,"offset","","The character offset of the source location.",3,null],[3,"Module","","A collection of headers.",null,null],[3,"ObjCAttributes","","Indicates which attributes were applied to an Objective-C property.",null,null],[12,"readonly","","Indicates use of the `readonly` attribute.",4,null],[12,"getter","","Indicates use of the `getter` attribute.",4,null],[12,"assign","","Indicates use of the `assign` attribute.",4,null],[12,"readwrite","","Indicates use of the `readwrite` attribute.",4,null],[12,"retain","","Indicates use of the `retain` attribute.",4,null],[12,"copy","","Indicates use of the `copy` attribute.",4,null],[12,"nonatomic","","Indicates use of the `nonatomic` attribute.",4,null],[12,"setter","","Indicates use of the `setter` attribute.",4,null],[12,"atomic","","Indicates use of the `atomic` attribute.",4,null],[12,"weak","","Indicates use of the `weak` attribute.",4,null],[12,"strong","","Indicates use of the `strong` attribute.",4,null],[12,"unsafe_retained","","Indicates use of the `unsafe_retained` attribute.",4,null],[3,"ObjCQualifiers","","Indicates which qualifiers were applied to an Objective-C method return or parameter type.",null,null],[12,"in_","","Indicates use of the `in` qualifier.",5,null],[12,"inout","","Indicates use of the `inout` qualifier.",5,null],[12,"out","","Indicates use of the `out` qualifier.",5,null],[12,"bycopy","","Indicates use of the `bycopy` qualifier.",5,null],[12,"byref","","Indicates use of the `byref` qualifier.",5,null],[12,"oneway","","Indicates use of the `oneway` qualifier.",5,null],[3,"ParseOptions","","A set of options that determines how a source file is parsed into a translation unit.",null,null],[12,"cached_completion_results","","Indicates whether certain code completion results will be cached when the translation\nunit is reparsed.",6,null],[12,"detailed_preprocessing_record","","Indicates whether a detailed preprocessing record will be constructed which tracks all\nmacro definitions and instantiations.",6,null],[12,"briefs_in_completion_results","","Indicates whether documentation comment briefs will be included in code completion\nresults.",6,null],[12,"incomplete","","Indicates whether the translation unit will be considered incomplete.",6,null],[12,"skipped_function_bodies","","Indicates whether function and method bodies will be skipped.",6,null],[3,"PlatformAvailability","","The availability of an AST entity on a particular platform.",null,null],[12,"platform","","The name of the platform.",7,null],[12,"unavailable","","Whether the AST entity is unavailable on the platform.",7,null],[12,"introduced","","The version of the platform in which this AST entity was introduced, if any.",7,null],[12,"deprecated","","The version of the platform in which this AST entity was deprecated, if any.",7,null],[12,"obsoleted","","The version of the platform in which this AST entity was obsoleted, if any.",7,null],[12,"message","","A message to display to users (e.g., replacement API suggestions).",7,null],[3,"SourceLocation","","A location in a source file.",null,null],[3,"SourceRange","","A half-open range in a source file.",null,null],[3,"ThreadOptions","","A set of options that determines which types of threads should use background priority.",null,null],[12,"editing","","Indicates whether threads creating for editing purposes should use background priority.",8,null],[12,"indexing","","Indicates whether threads creating for indexing purposes should use background priority.",8,null],[3,"Token","","A lexed piece of a source file.",null,null],[3,"TranslationUnit","","A preprocessed and parsed source file.",null,null],[3,"Type","","The type of an AST entity.",null,null],[3,"Unsaved","","The path to and unsaved contents of a previously existing file.",null,null],[3,"Usr","","A Unified Symbol Resolution (USR).",null,null],[3,"Version","","A version number in the form `x.y.z`.",null,null],[12,"x","","The `x` component of the version number.",9,null],[12,"y","","The `y` component of the version number.",9,null],[12,"z","","The `z` component of the version number.",9,null],[4,"Accessibility","","Indicates the accessibility of a declaration or base class specifier.",null,null],[13,"Private","","The declaration or base class specifier is private.",10,null],[13,"Protected","","The declaration or base class specifier is protected.",10,null],[13,"Public","","The declaration or base class specifier is public.",10,null],[4,"AlignofError","","Indicates the error that prevented determining the alignment of a type.",null,null],[13,"Dependent","","The type is a dependent type.",11,null],[13,"Incomplete","","The type is an incomplete type.",11,null],[4,"Availability","","Indicates the availability of an AST entity.",null,null],[13,"Available","","The entity is available.",12,null],[13,"Deprecated","","The entity is available but has been deprecated and any usage of it will be a warning.",12,null],[13,"Inaccessible","","The entity is available but is not accessible and any usage of it will be an error.",12,null],[13,"Unavailable","","The entity is not available and any usage of it will be an error.",12,null],[4,"CallingConvention","","Indicates the calling convention specified for a function type.",null,null],[13,"Unexposed","","The function type uses a calling convention that is not exposed via this interface.",13,null],[13,"Cdecl","","The function type uses the x86 `cdecl` calling convention.",13,null],[13,"Fastcall","","The function type uses the x86 `fastcall` calling convention.",13,null],[13,"Pascal","","The function type uses the x86 `pascal` calling convention.",13,null],[13,"Stdcall","","The function type uses the x86 `stdcall` calling convention.",13,null],[13,"Thiscall","","The function type uses the x86 `thiscall` calling convention.",13,null],[13,"Vectorcall","","The function type uses the x86 `vectorcall` calling convention.",13,null],[13,"Aapcs","","The function type uses the ARM AACPS calling convention.",13,null],[13,"AapcsVfp","","The function type uses the ARM AACPS-VFP calling convention.",13,null],[13,"IntelOcl","","The function type uses the calling convention for Intel OpenCL built-ins.",13,null],[13,"SysV64","","The function type uses the x64 C calling convention as specified in the System V ABI.",13,null],[13,"Win64","","The function type uses the x64 C calling convention as implemented on Windows.",13,null],[4,"CompletionChunk","","A piece of a code completion string.",null,null],[13,"Optional","","An optional piece that could be part of the template but is not required.",14,null],[13,"CurrentParameter","","Text that describes the current parameter when code completion was run on a function call,\nmessage send, or template specialization.",14,null],[13,"Informative","","Informative text that should be displayed but not inserted as part of the template.",14,null],[13,"Placeholder","","Text that should be replaced by the user.",14,null],[13,"ResultType","","Text that specifies the result type of the containing result.",14,null],[13,"Text","","Text that should be inserted.",14,null],[13,"TypedText","","Text that the user would be expected to type to get the containing code completion result.",14,null],[13,"Colon","","A colon (`':'`).",14,null],[13,"Comma","","A comma (`','`).",14,null],[13,"Equals","","An equals sign (`'='`).",14,null],[13,"Semicolon","","A semicolon (`';'`).",14,null],[13,"LeftAngleBracket","","A left angle bracket (`'<'`).",14,null],[13,"RightAngleBracket","","A right angle bracket (`'>'`).",14,null],[13,"LeftBrace","","A left brace (`'{'`).",14,null],[13,"RightBrace","","A right brace (`'}'`).",14,null],[13,"LeftParenthesis","","A left parentesis (`'('`)).",14,null],[13,"RightParenthesis","","A right parenthesis (`')'`).",14,null],[13,"LeftSquareBracket","","A left square bracket (`'['`).",14,null],[13,"RightSquareBracket","","A right square bracket (`']'`).",14,null],[13,"HorizontalSpace","","Horizontal space (e.g., `' '`).",14,null],[13,"VerticalSpace","","Vertical space (e.g., `'\\n'`).",14,null],[4,"EntityKind","","Indicates the categorization of an AST entity.",null,null],[13,"UnexposedDecl","","A declaration whose specific type is not exposed via this interface.",15,null],[13,"StructDecl","","A C or C++ struct.",15,null],[13,"UnionDecl","","A C or C++ union.",15,null],[13,"ClassDecl","","A C++ class.",15,null],[13,"EnumDecl","","An enum.",15,null],[13,"FieldDecl","","A C field or C++ non-static data member in a struct, union, or class.",15,null],[13,"EnumConstantDecl","","An enum constant.",15,null],[13,"FunctionDecl","","A function.",15,null],[13,"VarDecl","","A variable.",15,null],[13,"ParmDecl","","A parameter.",15,null],[13,"ObjCInterfaceDecl","","An Objective-C `@interface`.",15,null],[13,"ObjCCategoryDecl","","An Objective-C `@interface` for a category.",15,null],[13,"ObjCProtocolDecl","","An Objective-C `@protocol` declaration.",15,null],[13,"ObjCPropertyDecl","","An Objective-C `@property` declaration.",15,null],[13,"ObjCIvarDecl","","An Objective-C instance variable.",15,null],[13,"ObjCInstanceMethodDecl","","An Objective-C instance method.",15,null],[13,"ObjCClassMethodDecl","","An Objective-C class method.",15,null],[13,"ObjCImplementationDecl","","An Objective-C `@implementation`.",15,null],[13,"ObjCCategoryImplDecl","","An Objective-C `@implementation` for a category.",15,null],[13,"TypedefDecl","","A typedef.",15,null],[13,"Method","","A C++ method.",15,null],[13,"Namespace","","A C++ namespace.",15,null],[13,"LinkageSpec","","A linkage specification (e.g., `extern \"C\"`).",15,null],[13,"Constructor","","A C++ constructor.",15,null],[13,"Destructor","","A C++ destructor.",15,null],[13,"ConversionFunction","","A C++ conversion function.",15,null],[13,"TemplateTypeParameter","","A C++ template type parameter.",15,null],[13,"NonTypeTemplateParameter","","A C++ template non-type parameter.",15,null],[13,"TemplateTemplateParameter","","A C++ template template parameter.",15,null],[13,"FunctionTemplate","","A C++ function template.",15,null],[13,"ClassTemplate","","A C++ class template.",15,null],[13,"ClassTemplatePartialSpecialization","","A C++ class template partial specialization.",15,null],[13,"NamespaceAlias","","A C++ namespace alias declaration.",15,null],[13,"UsingDirective","","A C++ using directive.",15,null],[13,"UsingDeclaration","","A C++ using declaration.",15,null],[13,"TypeAliasDecl","","A C++ type alias declaration.",15,null],[13,"ObjCSynthesizeDecl","","An Objective-C `@synthesize` definition.",15,null],[13,"ObjCDynamicDecl","","An Objective-C `@dynamic` definition.",15,null],[13,"AccessSpecifier","","An access specifier.",15,null],[13,"ObjCSuperClassRef","","A reference to a super class in Objective-C.",15,null],[13,"ObjCProtocolRef","","A reference to a protocol in Objective-C.",15,null],[13,"ObjCClassRef","","A reference to a class in Objective-C.",15,null],[13,"TypeRef","","A reference to a type declaration.",15,null],[13,"BaseSpecifier","","A base class specifier.",15,null],[13,"TemplateRef","","A reference to a class template, function template, template template parameter, or class\ntemplate partial specialization.",15,null],[13,"NamespaceRef","","A reference to a namespace or namespace alias.",15,null],[13,"MemberRef","","A reference to a member of a struct, union, or class that occurs in some non-expression\ncontext.",15,null],[13,"LabelRef","","A reference to a labeled statement.",15,null],[13,"OverloadedDeclRef","","A reference to a set of overloaded functions or function templates that has not yet been\nresolved to a specific function or function template.",15,null],[13,"VariableRef","","A reference to a variable that occurs in some non-expression context.",15,null],[13,"UnexposedExpr","","An expression whose specific kind is not exposed via this interface.",15,null],[13,"DeclRefExpr","","An expression that refers to some value declaration, such as a function or enumerator.",15,null],[13,"MemberRefExpr","","An expression that refers to the member of a struct, union, or class.",15,null],[13,"CallExpr","","An expression that calls a function.",15,null],[13,"ObjCMessageExpr","","An expression that sends a message to an Objective-C object or class.",15,null],[13,"BlockExpr","","An expression that represents a block literal.",15,null],[13,"IntegerLiteral","","An integer literal.",15,null],[13,"FloatingLiteral","","A floating point number literal.",15,null],[13,"ImaginaryLiteral","","An imaginary number literal.",15,null],[13,"StringLiteral","","A string literal.",15,null],[13,"CharacterLiteral","","A character literal.",15,null],[13,"ParenExpr","","A parenthesized expression.",15,null],[13,"UnaryOperator","","Any unary expression other than `sizeof` and `alignof`.",15,null],[13,"ArraySubscriptExpr","","An array subscript expression (`[C99 6.5.2.1]`).",15,null],[13,"BinaryOperator","","A built-in binary expression (e.g., `x + y`).",15,null],[13,"CompoundAssignOperator","","A compound assignment expression (e.g., `x += y`).",15,null],[13,"ConditionalOperator","","A ternary expression.",15,null],[13,"CStyleCastExpr","","An explicit cast in C or a C-style cast in C++.",15,null],[13,"CompoundLiteralExpr","","A compound literal expression (`[C99 6.5.2.5]`).",15,null],[13,"InitListExpr","","A C or C++ initializer list.",15,null],[13,"AddrLabelExpr","","A GNU address of label expression.",15,null],[13,"StmtExpr","","A GNU statement expression.",15,null],[13,"GenericSelectionExpr","","A C11 generic selection expression.",15,null],[13,"GNUNullExpr","","A GNU `__null` expression.",15,null],[13,"StaticCastExpr","","A C++ `static_cast<>` expression.",15,null],[13,"DynamicCastExpr","","A C++ `dynamic_cast<>` expression.",15,null],[13,"ReinterpretCastExpr","","A C++ `reinterpret_cast<>` expression.",15,null],[13,"ConstCastExpr","","A C++ `const_cast<>` expression.",15,null],[13,"FunctionalCastExpr","","A C++ cast that uses \"function\" notation (e.g., `int(0.5)`).",15,null],[13,"TypeidExpr","","A C++ `typeid` expression.",15,null],[13,"BoolLiteralExpr","","A C++ boolean literal.",15,null],[13,"NullPtrLiteralExpr","","A C++ `nullptr` exrepssion.",15,null],[13,"ThisExpr","","A C++ `this` expression.",15,null],[13,"ThrowExpr","","A C++ `throw` expression.",15,null],[13,"NewExpr","","A C++ `new` expression.",15,null],[13,"DeleteExpr","","A C++ `delete` expression.",15,null],[13,"UnaryExpr","","A unary expression.",15,null],[13,"ObjCStringLiteral","","An Objective-C string literal.",15,null],[13,"ObjCEncodeExpr","","An Objective-C `@encode` expression.",15,null],[13,"ObjCSelectorExpr","","An Objective-C `@selector` expression.",15,null],[13,"ObjCProtocolExpr","","An Objective-C `@protocol` expression.",15,null],[13,"ObjCBridgedCastExpr","","An Objective-C bridged cast expression.",15,null],[13,"PackExpansionExpr","","A C++11 parameter pack expansion expression.",15,null],[13,"SizeOfPackExpr","","A C++11 `sizeof...` expression.",15,null],[13,"LambdaExpr","","A C++11 lambda expression.",15,null],[13,"ObjCBoolLiteralExpr","","An Objective-C boolean literal.",15,null],[13,"ObjCSelfExpr","","An Objective-C `self` expression.",15,null],[13,"UnexposedStmt","","A statement whose specific kind is not exposed via this interface.",15,null],[13,"LabelStmt","","A labelled statement in a function.",15,null],[13,"CompoundStmt","","A group of statements (e.g., a function body).",15,null],[13,"CaseStmt","","A `case` statement.",15,null],[13,"DefaultStmt","","A `default` statement.",15,null],[13,"IfStmt","","An `if` statement.",15,null],[13,"SwitchStmt","","A `switch` statement.",15,null],[13,"WhileStmt","","A `while` statement.",15,null],[13,"DoStmt","","A `do` statement.",15,null],[13,"ForStmt","","A `for` statement.",15,null],[13,"GotoStmt","","A `goto` statement.",15,null],[13,"IndirectGotoStmt","","An indirect `goto` statement.",15,null],[13,"ContinueStmt","","A `continue` statement.",15,null],[13,"BreakStmt","","A `break` statement.",15,null],[13,"ReturnStmt","","A `return` statement.",15,null],[13,"AsmStmt","","An inline assembly statement.",15,null],[13,"ObjCAtTryStmt","","An Objective-C `@try`-`@catch`-`@finally` statement.",15,null],[13,"ObjCAtCatchStmt","","An Objective-C `@catch` statement.",15,null],[13,"ObjCAtFinallyStmt","","An Objective-C `@finally` statement.",15,null],[13,"ObjCAtThrowStmt","","An Objective-C `@throw` statement.",15,null],[13,"ObjCAtSynchronizedStmt","","An Objective-C `@synchronized` statement.",15,null],[13,"ObjCAutoreleasePoolStmt","","An Objective-C autorelease pool statement.",15,null],[13,"ObjCForCollectionStmt","","An Objective-C collection statement.",15,null],[13,"CatchStmt","","A C++ catch statement.",15,null],[13,"TryStmt","","A C++ try statement.",15,null],[13,"ForRangeStmt","","A C++11 range-based for statement.",15,null],[13,"SehTryStmt","","A Windows Structured Exception Handling `__try` statement.",15,null],[13,"SehExceptStmt","","A Windows Structured Exception Handling `__except` statement.",15,null],[13,"SehFinallyStmt","","A Windows Structured Exception Handling `__finally` statement.",15,null],[13,"SehLeaveStmt","","A Windows Structured Exception Handling `__leave` statement.",15,null],[13,"MsAsmStmt","","A Microsoft inline assembly statement.",15,null],[13,"NullStmt","","A null statement.",15,null],[13,"DeclStmt","","An adaptor for mixing declarations with statements and expressions.",15,null],[13,"OmpParallelDirective","","An OpenMP parallel directive.",15,null],[13,"OmpSimdDirective","","An OpenMP SIMD directive.",15,null],[13,"OmpForDirective","","An OpenMP for directive.",15,null],[13,"OmpSectionsDirective","","An OpenMP sections directive.",15,null],[13,"OmpSectionDirective","","An OpenMP section directive.",15,null],[13,"OmpSingleDirective","","An OpenMP single directive.",15,null],[13,"OmpParallelForDirective","","An OpenMP parallel for directive.",15,null],[13,"OmpParallelSectionsDirective","","An OpenMP parallel sections directive.",15,null],[13,"OmpTaskDirective","","An OpenMP task directive.",15,null],[13,"OmpMasterDirective","","An OpenMP master directive.",15,null],[13,"OmpCriticalDirective","","An OpenMP critical directive.",15,null],[13,"OmpTaskyieldDirective","","An OpenMP taskyield directive.",15,null],[13,"OmpBarrierDirective","","An OpenMP barrier directive.",15,null],[13,"OmpTaskwaitDirective","","An OpenMP taskwait directive.",15,null],[13,"OmpFlushDirective","","An OpenMP flush directive.",15,null],[13,"OmpOrderedDirective","","An OpenMP ordered directive.",15,null],[13,"OmpAtomicDirective","","An OpenMP atomic directive.",15,null],[13,"OmpForSimdDirective","","An OpenMP for SIMD directive.",15,null],[13,"OmpParallelForSimdDirective","","An OpenMP parallel for SIMD directive.",15,null],[13,"OmpTargetDirective","","An OpenMP target directive.",15,null],[13,"OmpTeamsDirective","","An OpenMP teams directive.",15,null],[13,"OmpTaskgroupDirective","","An OpenMP taskgroup directive.",15,null],[13,"OmpCancellationPointDirective","","An OpenMP cancellation point directive.",15,null],[13,"OmpCancelDirective","","An OpenMP cancel directive.",15,null],[13,"TranslationUnit","","The top-level AST entity which acts as the root for the other entitys.",15,null],[13,"UnexposedAttr","","An attribute whose specific kind is not exposed via this interface.",15,null],[13,"IbActionAttr","","An attribute applied to an Objective-C IBAction.",15,null],[13,"IbOutletAttr","","An attribute applied to an Objective-C IBOutlet.",15,null],[13,"IbOutletCollectionAttr","","An attribute applied to an Objective-C IBOutletCollection.",15,null],[13,"FinalAttr","","The `final` attribute.",15,null],[13,"OverrideAttr","","The `override` attribute.",15,null],[13,"AnnotateAttr","","An annotation attribute.",15,null],[13,"AsmLabelAttr","","An ASM label attribute.",15,null],[13,"PackedAttr","","An attribute that requests for packed records (e.g., `__attribute__ ((__packed__))`).",15,null],[13,"PureAttr","","An attribute that asserts a function has no side effects (e.g., `__attribute__((pure))`).",15,null],[13,"ConstAttr","","The `const` attribute.",15,null],[13,"NoDuplicateAttr","","An attribute that allows calls to a function to be duplicated by the optimized\n(e.g., `__attribute__((noduplicate))`).",15,null],[13,"CudaConstantAttr","","A CUDA constant attribute.",15,null],[13,"CudaDeviceAttr","","A CUDA device attribute.",15,null],[13,"CudaGlobalAttr","","A CUDA global attribute.",15,null],[13,"CudaHostAttr","","A CUDA host attribute.",15,null],[13,"CudaSharedAttr","","A CUDA shared attribute.",15,null],[13,"PreprocessingDirective","","A preprocessing directive.",15,null],[13,"MacroDefinition","","A macro definition.",15,null],[13,"MacroExpansion","","A macro expansion.",15,null],[13,"InclusionDirective","","An inclusion directive.",15,null],[13,"ModuleImportDecl","","A module import declaration.",15,null],[13,"OverloadCandidate","","A single overload in a set of overloads.",15,null],[4,"EntityVisitResult","","Indicates how a entity visitation should proceed.",null,null],[13,"Break","","Do not continue visiting entities.",16,null],[13,"Continue","","Continue visiting sibling entities iteratively, skipping child entities.",16,null],[13,"Recurse","","Continue visiting sibling and child entities recursively, children first.",16,null],[4,"FixIt","","A suggested fix for an issue with a source file.",null,null],[13,"Deletion","","Delete a segment of the source file.",17,null],[13,"Insertion","","Insert a string into the source file.",17,null],[13,"Replacement","","Replace a segment of the source file with a string.",17,null],[4,"Language","","Indicates the language used by a declaration.",null,null],[13,"C","","The entity uses the C programming language.",18,null],[13,"Cpp","","The entity uses the C++ programming language.",18,null],[13,"ObjectiveC","","The entity uses the Objective-C programming language.",18,null],[4,"Linkage","","Indicates the linkage of an AST entity.",null,null],[13,"Automatic","","The AST entity has automatic storage (e.g., variables or parameters).",19,null],[13,"Internal","","The AST entity is a static variable or static function.",19,null],[13,"External","","The AST entity has external linkage.",19,null],[13,"UniqueExternal","","The AST entity has external linkage and lives in a C++ anonymous namespace.",19,null],[4,"MemoryUsage","","Indicates the usage category of a quantity of memory.",null,null],[13,"Ast","","Expressions, declarations, and types.",20,null],[13,"AstSideTables","","Various tables used by the AST.",20,null],[13,"ExternalAstSourceMalloc","","Memory allocated with `malloc` for external AST sources.",20,null],[13,"ExternalAstSourceMMap","","Memory allocated with `mmap` for external AST sources.",20,null],[13,"GlobalCodeCompletionResults","","Cached global code completion results.",20,null],[13,"Identifiers","","Identifiers.",20,null],[13,"PreprocessingRecord","","The preprocessing record.",20,null],[13,"Preprocessor","","Memory allocated with `malloc` for the preprocessor.",20,null],[13,"PreprocessorHeaderSearch","","Header search tables.",20,null],[13,"Selectors","","Selectors.",20,null],[13,"SourceManagerContentCache","","The content cache used by the source manager.",20,null],[13,"SourceManagerDataStructures","","Data structures used by the source manager.",20,null],[13,"SourceManagerMalloc","","Memory allocated with `malloc` for the source manager.",20,null],[13,"SourceManagerMMap","","Memory allocated with `mmap` for the source manager.",20,null],[4,"OffsetofError","","Indicates the error that prevented determining the offset of a field in a record type.",null,null],[13,"Dependent","","The record type is a dependent type.",21,null],[13,"Incomplete","","The record type is an incomplete type.",21,null],[13,"Name","","The record type does not contain a field with the supplied name.",21,null],[13,"Parent","","The record type has an invalid parent declaration.",21,null],[4,"RefQualifier","","Indicates the ref qualifier of a C++ function or method type.",null,null],[13,"LValue","","The function or method has an l-value ref qualifier (`&`).",22,null],[13,"RValue","","The function or method has an r-value ref qualifier (`&&`).",22,null],[4,"SaveError","","Indicates the type of error that prevented the saving of a translation unit to an AST file.",null,null],[13,"Errors","","Errors in the translation unit prevented saving.",23,null],[13,"Unknown","","An unknown error occurred.",23,null],[4,"Severity","","Indicates the severity of a diagnostic.",null,null],[13,"Ignored","","The diagnostic has been suppressed (e.g., by a command-line option).",24,null],[13,"Note","","The diagnostic is attached to the previous non-note diagnostic.",24,null],[13,"Warning","","The diagnostic targets suspicious code that may or may not be wrong.",24,null],[13,"Error","","The diagnostic targets ill-formed code.",24,null],[13,"Fatal","","The diagnostic targets code that is ill-formed in such a way that parser recovery is\nunlikely to produce any useful results.",24,null],[4,"SizeofError","","Indicates the error that prevented determining the size of a type.",null,null],[13,"Dependent","","The type is a dependent type.",25,null],[13,"Incomplete","","The type is an incomplete type.",25,null],[13,"VariableSize","","The type is a variable size type.",25,null],[4,"SourceError","","Indicates the type of error that prevented the loading of a translation unit from a source file.",null,null],[13,"AstDeserialization","","An error occurred while deserializing an AST file.",26,null],[13,"Crash","","`libclang` crashed.",26,null],[13,"Unknown","","An unknown error occurred.",26,null],[4,"TokenKind","","Indicates the categorization of a token.",null,null],[13,"Comment","","A comment token.",27,null],[13,"Identifier","","An identifier token.",27,null],[13,"Keyword","","A keyword token.",27,null],[13,"Literal","","A literal token.",27,null],[13,"Punctuation","","A puncuation token.",27,null],[4,"TypeKind","","Indicates the categorization of a type.",null,null],[13,"Unexposed","","A type whose specific kind is not exposed via this interface.",28,null],[13,"Void","","`void`",28,null],[13,"Bool","","`bool` (C++) or `_Bool` (C99)",28,null],[13,"CharS","","The `char` type when it is signed by default.",28,null],[13,"CharU","","The `char` type when it is unsigned by default.",28,null],[13,"SChar","","`signed char`",28,null],[13,"UChar","","`unsigned char`",28,null],[13,"WChar","","`wchar_t`",28,null],[13,"Char16","","`char16_t`",28,null],[13,"Char32","","`char32_t`",28,null],[13,"Short","","`short`",28,null],[13,"UShort","","`unsigned short`",28,null],[13,"Int","","`int`",28,null],[13,"UInt","","`unsigned int`",28,null],[13,"Long","","`long`",28,null],[13,"ULong","","`unsigned long`",28,null],[13,"LongLong","","`long long`",28,null],[13,"ULongLong","","`unsigned long long`",28,null],[13,"Int128","","`__int128_t`",28,null],[13,"UInt128","","`__uint128_t`",28,null],[13,"Float","","`float`",28,null],[13,"Double","","`double`",28,null],[13,"LongDouble","","`long double`",28,null],[13,"Nullptr","","`nullptr_t` (C++11)",28,null],[13,"Complex","","A C99 complex type (e.g., `_Complex float`).",28,null],[13,"Dependent","","An unknown dependent type.",28,null],[13,"Overload","","The type of an unresolved overload set.",28,null],[13,"ObjCId","","`id` (Objective-C)",28,null],[13,"ObjCClass","","`Class` (Objective-C)",28,null],[13,"ObjCSel","","`SEL` (Objective-C)",28,null],[13,"ObjCInterface","","An Objective-C interface type.",28,null],[13,"ObjCObjectPointer","","An Objective-C pointer to object type.",28,null],[13,"Pointer","","A pointer type.",28,null],[13,"BlockPointer","","A block pointer type (e.g., `void (^)(int)`).",28,null],[13,"MemberPointer","","A pointer to a record member type.",28,null],[13,"LValueReference","","An l-value reference (e.g. `int&`).",28,null],[13,"RValueReference","","An r-value reference (e.g. `int&&`).",28,null],[13,"Enum","","An enum type.",28,null],[13,"Record","","A record type such as a struct or a class.",28,null],[13,"Typedef","","A typedef.",28,null],[13,"FunctionPrototype","","A function prototype with parameter type information (e.g., `void foo(int)`).",28,null],[13,"FunctionNoPrototype","","A function prototype without parameter type information (e.g., `void foo()`).",28,null],[13,"ConstantArray","","An array type with a specified size that is an integer constant expression.",28,null],[13,"DependentSizedArray","","An array type with a specified size that is a dependent value.",28,null],[13,"IncompleteArray","","An array type without a specified size.",28,null],[13,"VariableArray","","An array type with a specified size that is not an integer constant expression.",28,null],[13,"Vector","","A GCC generic vector type.",28,null],[0,"ffi","","The raw bindings to `libclang`.",null,null],[3,"CXCodeComplete_Flags","clang::ffi","",null,null],[3,"CXCompletionContext","","",null,null],[3,"CXDiagnosticDisplayOptions","","",null,null],[3,"CXGlobalOptFlags","","",null,null],[3,"CXIdxDeclInfoFlags","","",null,null],[3,"CXIndexOptFlags","","",null,null],[3,"CXNameRefFlags","","",null,null],[3,"CXObjCDeclQualifierKind","","",null,null],[3,"CXObjCPropertyAttrKind","","",null,null],[3,"CXReparse_Flags","","",null,null],[3,"CXSaveTranslationUnit_Flags","","",null,null],[3,"CXTranslationUnit_Flags","","",null,null],[3,"CXCompilationDatabase","","",null,null],[3,"CXCompileCommand","","",null,null],[3,"CXCompileCommands","","",null,null],[3,"CXCompletionString","","",null,null],[3,"CXCursorSet","","",null,null],[3,"CXDiagnostic","","",null,null],[3,"CXDiagnosticSet","","",null,null],[3,"CXFile","","",null,null],[3,"CXIdxClientASTFile","","",null,null],[3,"CXIdxClientContainer","","",null,null],[3,"CXIdxClientEntity","","",null,null],[3,"CXIdxClientFile","","",null,null],[3,"CXIndex","","",null,null],[3,"CXIndexAction","","",null,null],[3,"CXModule","","",null,null],[3,"CXModuleMapDescriptor","","",null,null],[3,"CXRemapping","","",null,null],[3,"CXTranslationUnit","","",null,null],[3,"CXVirtualFileOverlay","","",null,null],[3,"CXCodeCompleteResults","","",null,null],[12,"Results","","",29,null],[12,"NumResults","","",29,null],[3,"CXCompletionResult","","",null,null],[12,"CursorKind","","",30,null],[12,"CompletionString","","",30,null],[3,"CXCursor","","",null,null],[12,"kind","","",31,null],[12,"xdata","","",31,null],[12,"data","","",31,null],[3,"CXCursorAndRangeVisitor","","",null,null],[12,"context","","",32,null],[12,"visit","","",32,null],[3,"CXFileUniqueID","","",null,null],[12,"data","","",33,null],[3,"CXIdxAttrInfo","","",null,null],[12,"kind","","",34,null],[12,"cursor","","",34,null],[12,"loc","","",34,null],[3,"CXIdxBaseClassInfo","","",null,null],[12,"base","","",35,null],[12,"cursor","","",35,null],[12,"loc","","",35,null],[3,"CXIdxCXXClassDeclInfo","","",null,null],[12,"declInfo","","",36,null],[12,"bases","","",36,null],[12,"numBases","","",36,null],[3,"CXIdxContainerInfo","","",null,null],[12,"cursor","","",37,null],[3,"CXIdxDeclInfo","","",null,null],[12,"entityInfo","","",38,null],[12,"cursor","","",38,null],[12,"loc","","",38,null],[12,"semanticContainer","","",38,null],[12,"lexicalContainer","","",38,null],[12,"isRedeclaration","","",38,null],[12,"isDefinition","","",38,null],[12,"isContainer","","",38,null],[12,"declAsContainer","","",38,null],[12,"isImplicit","","",38,null],[12,"attributes","","",38,null],[12,"numAttributes","","",38,null],[12,"flags","","",38,null],[3,"CXIdxEntityInfo","","",null,null],[12,"kind","","",39,null],[12,"templateKind","","",39,null],[12,"lang","","",39,null],[12,"name","","",39,null],[12,"USR","","",39,null],[12,"cursor","","",39,null],[12,"attributes","","",39,null],[12,"numAttributes","","",39,null],[3,"CXIdxEntityRefInfo","","",null,null],[12,"kind","","",40,null],[12,"cursor","","",40,null],[12,"loc","","",40,null],[12,"referencedEntity","","",40,null],[12,"parentEntity","","",40,null],[12,"container","","",40,null],[3,"CXIdxIBOutletCollectionAttrInfo","","",null,null],[12,"attrInfo","","",41,null],[12,"objcClass","","",41,null],[12,"classCursor","","",41,null],[12,"classLoc","","",41,null],[3,"CXIdxImportedASTFileInfo","","",null,null],[12,"file","","",42,null],[12,"module","","",42,null],[12,"loc","","",42,null],[12,"isImplicit","","",42,null],[3,"CXIdxIncludedFileInfo","","",null,null],[12,"hashLoc","","",43,null],[12,"filename","","",43,null],[12,"file","","",43,null],[12,"isImport","","",43,null],[12,"isAngled","","",43,null],[12,"isModuleImport","","",43,null],[3,"CXIdxLoc","","",null,null],[12,"ptr_data","","",44,null],[12,"int_data","","",44,null],[3,"CXIdxObjCCategoryDeclInfo","","",null,null],[12,"containerInfo","","",45,null],[12,"objcClass","","",45,null],[12,"classCursor","","",45,null],[12,"classLoc","","",45,null],[12,"protocols","","",45,null],[3,"CXIdxObjCContainerDeclInfo","","",null,null],[12,"declInfo","","",46,null],[12,"kind","","",46,null],[3,"CXIdxObjCInterfaceDeclInfo","","",null,null],[12,"containerInfo","","",47,null],[12,"superInfo","","",47,null],[12,"protocols","","",47,null],[3,"CXIdxObjCPropertyDeclInfo","","",null,null],[12,"declInfo","","",48,null],[12,"getter","","",48,null],[12,"setter","","",48,null],[3,"CXIdxObjCProtocolRefInfo","","",null,null],[12,"protocol","","",49,null],[12,"cursor","","",49,null],[12,"loc","","",49,null],[3,"CXIdxObjCProtocolRefListInfo","","",null,null],[12,"protocols","","",50,null],[12,"numProtocols","","",50,null],[3,"CXPlatformAvailability","","",null,null],[12,"Platform","","",51,null],[12,"Introduced","","",51,null],[12,"Deprecated","","",51,null],[12,"Obsoleted","","",51,null],[12,"Unavailable","","",51,null],[12,"Message","","",51,null],[3,"CXSourceLocation","","",null,null],[12,"ptr_data","","",52,null],[12,"int_data","","",52,null],[3,"CXSourceRange","","",null,null],[12,"ptr_data","","",53,null],[12,"begin_int_data","","",53,null],[12,"end_int_data","","",53,null],[3,"CXSourceRangeList","","",null,null],[12,"count","","",54,null],[12,"ranges","","",54,null],[3,"CXString","","",null,null],[12,"data","","",55,null],[12,"private_flags","","",55,null],[3,"CXTUResourceUsage","","",null,null],[12,"data","","",56,null],[12,"numEntries","","",56,null],[12,"entries","","",56,null],[3,"CXTUResourceUsageEntry","","",null,null],[12,"kind","","",57,null],[12,"amount","","",57,null],[3,"CXToken","","",null,null],[12,"int_data","","",58,null],[12,"ptr_data","","",58,null],[3,"CXType","","",null,null],[12,"kind","","",59,null],[12,"data","","",59,null],[3,"CXUnsavedFile","","",null,null],[12,"Filename","","",60,null],[12,"Contents","","",60,null],[12,"Length","","",60,null],[3,"CXVersion","","",null,null],[12,"Major","","",61,null],[12,"Minor","","",61,null],[12,"Subminor","","",61,null],[3,"IndexerCallbacks","","",null,null],[12,"abortQuery","","",62,null],[12,"diagnostic","","",62,null],[12,"enteredMainFile","","",62,null],[12,"ppIncludedFile","","",62,null],[12,"importedASTFile","","",62,null],[12,"startedTranslationUnit","","",62,null],[12,"indexDeclaration","","",62,null],[12,"indexEntityReference","","",62,null],[4,"CXAvailabilityKind","","",null,null],[13,"Available","","",63,null],[13,"Deprecated","","",63,null],[13,"NotAvailable","","",63,null],[13,"NotAccessible","","",63,null],[4,"CXCallingConv","","",null,null],[13,"Default","","",64,null],[13,"C","","",64,null],[13,"X86StdCall","","",64,null],[13,"X86FastCall","","",64,null],[13,"X86ThisCall","","",64,null],[13,"X86Pascal","","",64,null],[13,"AAPCS","","",64,null],[13,"AAPCS_VFP","","",64,null],[13,"IntelOclBicc","","",64,null],[13,"X86_64Win64","","",64,null],[13,"X86_64SysV","","",64,null],[13,"Invalid","","",64,null],[13,"Unexposed","","",64,null],[4,"CXChildVisitResult","","",null,null],[13,"Break","","",65,null],[13,"Continue","","",65,null],[13,"Recurse","","",65,null],[4,"CXCompilationDatabase_Error","","",null,null],[13,"NoError","","",66,null],[13,"CanNotLoadDatabase","","",66,null],[4,"CXCompletionChunkKind","","",null,null],[13,"Optional","","",67,null],[13,"TypedText","","",67,null],[13,"Text","","",67,null],[13,"Placeholder","","",67,null],[13,"Informative","","",67,null],[13,"CurrentParameter","","",67,null],[13,"LeftParen","","",67,null],[13,"RightParen","","",67,null],[13,"LeftBracket","","",67,null],[13,"RightBracket","","",67,null],[13,"LeftBrace","","",67,null],[13,"RightBrace","","",67,null],[13,"LeftAngle","","",67,null],[13,"RightAngle","","",67,null],[13,"Comma","","",67,null],[13,"ResultType","","",67,null],[13,"Colon","","",67,null],[13,"SemiColon","","",67,null],[13,"Equal","","",67,null],[13,"HorizontalSpace","","",67,null],[13,"VerticalSpace","","",67,null],[4,"CXCursorKind","","",null,null],[13,"UnexposedDecl","","",68,null],[13,"StructDecl","","",68,null],[13,"UnionDecl","","",68,null],[13,"ClassDecl","","",68,null],[13,"EnumDecl","","",68,null],[13,"FieldDecl","","",68,null],[13,"EnumConstantDecl","","",68,null],[13,"FunctionDecl","","",68,null],[13,"VarDecl","","",68,null],[13,"ParmDecl","","",68,null],[13,"ObjCInterfaceDecl","","",68,null],[13,"ObjCCategoryDecl","","",68,null],[13,"ObjCProtocolDecl","","",68,null],[13,"ObjCPropertyDecl","","",68,null],[13,"ObjCIvarDecl","","",68,null],[13,"ObjCInstanceMethodDecl","","",68,null],[13,"ObjCClassMethodDecl","","",68,null],[13,"ObjCImplementationDecl","","",68,null],[13,"ObjCCategoryImplDecl","","",68,null],[13,"TypedefDecl","","",68,null],[13,"CXXMethod","","",68,null],[13,"Namespace","","",68,null],[13,"LinkageSpec","","",68,null],[13,"Constructor","","",68,null],[13,"Destructor","","",68,null],[13,"ConversionFunction","","",68,null],[13,"TemplateTypeParameter","","",68,null],[13,"NonTypeTemplateParameter","","",68,null],[13,"TemplateTemplateParameter","","",68,null],[13,"FunctionTemplate","","",68,null],[13,"ClassTemplate","","",68,null],[13,"ClassTemplatePartialSpecialization","","",68,null],[13,"NamespaceAlias","","",68,null],[13,"UsingDirective","","",68,null],[13,"UsingDeclaration","","",68,null],[13,"TypeAliasDecl","","",68,null],[13,"ObjCSynthesizeDecl","","",68,null],[13,"ObjCDynamicDecl","","",68,null],[13,"CXXAccessSpecifier","","",68,null],[13,"ObjCSuperClassRef","","",68,null],[13,"ObjCProtocolRef","","",68,null],[13,"ObjCClassRef","","",68,null],[13,"TypeRef","","",68,null],[13,"CXXBaseSpecifier","","",68,null],[13,"TemplateRef","","",68,null],[13,"NamespaceRef","","",68,null],[13,"MemberRef","","",68,null],[13,"LabelRef","","",68,null],[13,"OverloadedDeclRef","","",68,null],[13,"VariableRef","","",68,null],[13,"InvalidFile","","",68,null],[13,"NoDeclFound","","",68,null],[13,"NotImplemented","","",68,null],[13,"InvalidCode","","",68,null],[13,"UnexposedExpr","","",68,null],[13,"DeclRefExpr","","",68,null],[13,"MemberRefExpr","","",68,null],[13,"CallExpr","","",68,null],[13,"ObjCMessageExpr","","",68,null],[13,"BlockExpr","","",68,null],[13,"IntegerLiteral","","",68,null],[13,"FloatingLiteral","","",68,null],[13,"ImaginaryLiteral","","",68,null],[13,"StringLiteral","","",68,null],[13,"CharacterLiteral","","",68,null],[13,"ParenExpr","","",68,null],[13,"UnaryOperator","","",68,null],[13,"ArraySubscriptExpr","","",68,null],[13,"BinaryOperator","","",68,null],[13,"CompoundAssignOperator","","",68,null],[13,"ConditionalOperator","","",68,null],[13,"CStyleCastExpr","","",68,null],[13,"CompoundLiteralExpr","","",68,null],[13,"InitListExpr","","",68,null],[13,"AddrLabelExpr","","",68,null],[13,"StmtExpr","","",68,null],[13,"GenericSelectionExpr","","",68,null],[13,"GNUNullExpr","","",68,null],[13,"CXXStaticCastExpr","","",68,null],[13,"CXXDynamicCastExpr","","",68,null],[13,"CXXReinterpretCastExpr","","",68,null],[13,"CXXConstCastExpr","","",68,null],[13,"CXXFunctionalCastExpr","","",68,null],[13,"CXXTypeidExpr","","",68,null],[13,"CXXBoolLiteralExpr","","",68,null],[13,"CXXNullPtrLiteralExpr","","",68,null],[13,"CXXThisExpr","","",68,null],[13,"CXXThrowExpr","","",68,null],[13,"CXXNewExpr","","",68,null],[13,"CXXDeleteExpr","","",68,null],[13,"UnaryExpr","","",68,null],[13,"ObjCStringLiteral","","",68,null],[13,"ObjCEncodeExpr","","",68,null],[13,"ObjCSelectorExpr","","",68,null],[13,"ObjCProtocolExpr","","",68,null],[13,"ObjCBridgedCastExpr","","",68,null],[13,"PackExpansionExpr","","",68,null],[13,"SizeOfPackExpr","","",68,null],[13,"LambdaExpr","","",68,null],[13,"ObjCBoolLiteralExpr","","",68,null],[13,"ObjCSelfExpr","","",68,null],[13,"UnexposedStmt","","",68,null],[13,"LabelStmt","","",68,null],[13,"CompoundStmt","","",68,null],[13,"CaseStmt","","",68,null],[13,"DefaultStmt","","",68,null],[13,"IfStmt","","",68,null],[13,"SwitchStmt","","",68,null],[13,"WhileStmt","","",68,null],[13,"DoStmt","","",68,null],[13,"ForStmt","","",68,null],[13,"GotoStmt","","",68,null],[13,"IndirectGotoStmt","","",68,null],[13,"ContinueStmt","","",68,null],[13,"BreakStmt","","",68,null],[13,"ReturnStmt","","",68,null],[13,"AsmStmt","","Duplicate of `GccAsmStmt`.",68,null],[13,"ObjCAtTryStmt","","",68,null],[13,"ObjCAtCatchStmt","","",68,null],[13,"ObjCAtFinallyStmt","","",68,null],[13,"ObjCAtThrowStmt","","",68,null],[13,"ObjCAtSynchronizedStmt","","",68,null],[13,"ObjCAutoreleasePoolStmt","","",68,null],[13,"ObjCForCollectionStmt","","",68,null],[13,"CXXCatchStmt","","",68,null],[13,"CXXTryStmt","","",68,null],[13,"CXXForRangeStmt","","",68,null],[13,"SEHTryStmt","","",68,null],[13,"SEHExceptStmt","","",68,null],[13,"SEHFinallyStmt","","",68,null],[13,"MSAsmStmt","","",68,null],[13,"NullStmt","","",68,null],[13,"DeclStmt","","",68,null],[13,"OMPParallelDirective","","",68,null],[13,"OMPSimdDirective","","",68,null],[13,"OMPForDirective","","",68,null],[13,"OMPSectionsDirective","","",68,null],[13,"OMPSectionDirective","","",68,null],[13,"OMPSingleDirective","","",68,null],[13,"OMPParallelForDirective","","",68,null],[13,"OMPParallelSectionsDirective","","",68,null],[13,"OMPTaskDirective","","",68,null],[13,"OMPMasterDirective","","",68,null],[13,"OMPCriticalDirective","","",68,null],[13,"OMPTaskyieldDirective","","",68,null],[13,"OMPBarrierDirective","","",68,null],[13,"OMPTaskwaitDirective","","",68,null],[13,"OMPFlushDirective","","",68,null],[13,"SEHLeaveStmt","","",68,null],[13,"TranslationUnit","","",68,null],[13,"UnexposedAttr","","",68,null],[13,"IBActionAttr","","",68,null],[13,"IBOutletAttr","","",68,null],[13,"IBOutletCollectionAttr","","",68,null],[13,"CXXFinalAttr","","",68,null],[13,"CXXOverrideAttr","","",68,null],[13,"AnnotateAttr","","",68,null],[13,"AsmLabelAttr","","",68,null],[13,"PackedAttr","","",68,null],[13,"PureAttr","","",68,null],[13,"ConstAttr","","",68,null],[13,"NoDuplicateAttr","","",68,null],[13,"CUDAConstantAttr","","",68,null],[13,"CUDADeviceAttr","","",68,null],[13,"CUDAGlobalAttr","","",68,null],[13,"CUDAHostAttr","","",68,null],[13,"PreprocessingDirective","","",68,null],[13,"MacroDefinition","","",68,null],[13,"MacroExpansion","","Duplicate of `MacroInstantiation`.",68,null],[13,"InclusionDirective","","",68,null],[13,"ModuleImportDecl","","",68,null],[4,"CXDiagnosticSeverity","","",null,null],[13,"Ignored","","",69,null],[13,"Note","","",69,null],[13,"Warning","","",69,null],[13,"Error","","",69,null],[13,"Fatal","","",69,null],[4,"CXErrorCode","","",null,null],[13,"Success","","",70,null],[13,"Failure","","",70,null],[13,"Crashed","","",70,null],[13,"InvalidArguments","","",70,null],[13,"ASTReadError","","",70,null],[4,"CXIdxAttrKind","","",null,null],[13,"Unexposed","","",71,null],[13,"IBAction","","",71,null],[13,"IBOutlet","","",71,null],[13,"IBOutletCollection","","",71,null],[4,"CXIdxEntityCXXTemplateKind","","",null,null],[13,"NonTemplate","","",72,null],[13,"Template","","",72,null],[13,"TemplatePartialSpecialization","","",72,null],[13,"TemplateSpecialization","","",72,null],[4,"CXIdxEntityKind","","",null,null],[13,"Unexposed","","",73,null],[13,"Typedef","","",73,null],[13,"Function","","",73,null],[13,"Variable","","",73,null],[13,"Field","","",73,null],[13,"EnumConstant","","",73,null],[13,"ObjCClass","","",73,null],[13,"ObjCProtocol","","",73,null],[13,"ObjCCategory","","",73,null],[13,"ObjCInstanceMethod","","",73,null],[13,"ObjCClassMethod","","",73,null],[13,"ObjCProperty","","",73,null],[13,"ObjCIvar","","",73,null],[13,"Enum","","",73,null],[13,"Struct","","",73,null],[13,"Union","","",73,null],[13,"CXXClass","","",73,null],[13,"CXXNamespace","","",73,null],[13,"CXXNamespaceAlias","","",73,null],[13,"CXXStaticVariable","","",73,null],[13,"CXXStaticMethod","","",73,null],[13,"CXXInstanceMethod","","",73,null],[13,"CXXConstructor","","",73,null],[13,"CXXDestructor","","",73,null],[13,"CXXConversionFunction","","",73,null],[13,"CXXTypeAlias","","",73,null],[13,"CXXInterface","","",73,null],[4,"CXIdxEntityLanguage","","",null,null],[13,"None","","",74,null],[13,"C","","",74,null],[13,"ObjC","","",74,null],[13,"CXX","","",74,null],[4,"CXIdxEntityRefKind","","",null,null],[13,"Direct","","",75,null],[13,"Implicit","","",75,null],[4,"CXIdxObjCContainerKind","","",null,null],[13,"ForwardRef","","",76,null],[13,"Interface","","",76,null],[13,"Implementation","","",76,null],[4,"CXLanguageKind","","",null,null],[13,"Invalid","","",77,null],[13,"C","","",77,null],[13,"ObjC","","",77,null],[13,"CPlusPlus","","",77,null],[4,"CXLinkageKind","","",null,null],[13,"Invalid","","",78,null],[13,"NoLinkage","","",78,null],[13,"Internal","","",78,null],[13,"UniqueExternal","","",78,null],[13,"External","","",78,null],[4,"CXLoadDiag_Error","","",null,null],[13,"None","","",79,null],[13,"Unknown","","",79,null],[13,"CannotLoad","","",79,null],[13,"InvalidFile","","",79,null],[4,"CXRefQualifierKind","","",null,null],[13,"None","","",80,null],[13,"LValue","","",80,null],[13,"RValue","","",80,null],[4,"CXResult","","",null,null],[13,"Success","","",81,null],[13,"Invalid","","",81,null],[13,"VisitBreak","","",81,null],[4,"CXSaveError","","",null,null],[13,"None","","",82,null],[13,"Unknown","","",82,null],[13,"TranslationErrors","","",82,null],[13,"InvalidTU","","",82,null],[4,"CXTUResourceUsageKind","","",null,null],[13,"AST","","",83,null],[13,"Identifiers","","",83,null],[13,"Selectors","","",83,null],[13,"GlobalCompletionResults","","",83,null],[13,"SourceManagerContentCache","","",83,null],[13,"AST_SideTables","","",83,null],[13,"SourceManager_Membuffer_Malloc","","",83,null],[13,"SourceManager_Membuffer_MMap","","",83,null],[13,"ExternalASTSource_Membuffer_Malloc","","",83,null],[13,"ExternalASTSource_Membuffer_MMap","","",83,null],[13,"Preprocessor","","",83,null],[13,"PreprocessingRecord","","",83,null],[13,"SourceManager_DataStructures","","",83,null],[13,"Preprocessor_HeaderSearch","","",83,null],[4,"CXTokenKind","","",null,null],[13,"Punctuation","","",84,null],[13,"Keyword","","",84,null],[13,"Identifier","","",84,null],[13,"Literal","","",84,null],[13,"Comment","","",84,null],[4,"CXTypeKind","","",null,null],[13,"Invalid","","",85,null],[13,"Unexposed","","",85,null],[13,"Void","","",85,null],[13,"Bool","","",85,null],[13,"Char_U","","",85,null],[13,"UChar","","",85,null],[13,"Char16","","",85,null],[13,"Char32","","",85,null],[13,"UShort","","",85,null],[13,"UInt","","",85,null],[13,"ULong","","",85,null],[13,"ULongLong","","",85,null],[13,"UInt128","","",85,null],[13,"Char_S","","",85,null],[13,"SChar","","",85,null],[13,"WChar","","",85,null],[13,"Short","","",85,null],[13,"Int","","",85,null],[13,"Long","","",85,null],[13,"LongLong","","",85,null],[13,"Int128","","",85,null],[13,"Float","","",85,null],[13,"Double","","",85,null],[13,"LongDouble","","",85,null],[13,"NullPtr","","",85,null],[13,"Overload","","",85,null],[13,"Dependent","","",85,null],[13,"ObjCId","","",85,null],[13,"ObjCClass","","",85,null],[13,"ObjCSel","","",85,null],[13,"Complex","","",85,null],[13,"Pointer","","",85,null],[13,"BlockPointer","","",85,null],[13,"LValueReference","","",85,null],[13,"RValueReference","","",85,null],[13,"Record","","",85,null],[13,"Enum","","",85,null],[13,"Typedef","","",85,null],[13,"ObjCInterface","","",85,null],[13,"ObjCObjectPointer","","",85,null],[13,"FunctionNoProto","","",85,null],[13,"FunctionProto","","",85,null],[13,"ConstantArray","","",85,null],[13,"Vector","","",85,null],[13,"IncompleteArray","","",85,null],[13,"VariableArray","","",85,null],[13,"DependentSizedArray","","",85,null],[13,"MemberPointer","","",85,null],[4,"CXTypeLayoutError","","",null,null],[13,"Invalid","","",86,null],[13,"Incomplete","","",86,null],[13,"Dependent","","",86,null],[13,"NotConstantSize","","",86,null],[13,"InvalidFieldName","","",86,null],[4,"CXVisitorResult","","",null,null],[13,"Break","","",87,null],[13,"Continue","","",87,null],[4,"CX_CXXAccessSpecifier","","",null,null],[13,"CXXInvalidAccessSpecifier","","",88,null],[13,"CXXPublic","","",88,null],[13,"CXXProtected","","",88,null],[13,"CXXPrivate","","",88,null],[5,"clang_CXCursorSet_contains","","",null,null],[5,"clang_CXCursorSet_insert","","",null,null],[5,"clang_CXIndex_getGlobalOptions","","",null,null],[5,"clang_CXIndex_setGlobalOptions","","",null,null],[5,"clang_CXXMethod_isConst","","",null,null],[5,"clang_CXXMethod_isPureVirtual","","",null,null],[5,"clang_CXXMethod_isStatic","","",null,null],[5,"clang_CXXMethod_isVirtual","","",null,null],[5,"clang_CompilationDatabase_dispose","","",null,null],[5,"clang_CompilationDatabase_fromDirectory","","",null,null],[5,"clang_CompilationDatabase_getAllCompileCommands","","",null,null],[5,"clang_CompilationDatabase_getCompileCommands","","",null,null],[5,"clang_CompileCommand_getArg","","",null,null],[5,"clang_CompileCommand_getDirectory","","",null,null],[5,"clang_CompileCommand_getMappedSourceContent","","",null,null],[5,"clang_CompileCommand_getMappedSourcePath","","",null,null],[5,"clang_CompileCommand_getNumArgs","","",null,null],[5,"clang_CompileCommand_getNumMappedSources","","",null,null],[5,"clang_CompileCommands_dispose","","",null,null],[5,"clang_CompileCommands_getCommand","","",null,null],[5,"clang_CompileCommands_getSize","","",null,null],[5,"clang_Cursor_getArgument","","",null,null],[5,"clang_Cursor_getBriefCommentText","","",null,null],[5,"clang_Cursor_getCommentRange","","",null,null],[5,"clang_Cursor_getModule","","",null,null],[5,"clang_Cursor_getNumArguments","","",null,null],[5,"clang_Cursor_getObjCDeclQualifiers","","",null,null],[5,"clang_Cursor_getObjCPropertyAttributes","","",null,null],[5,"clang_Cursor_getObjCSelectorIndex","","",null,null],[5,"clang_Cursor_getRawCommentText","","",null,null],[5,"clang_Cursor_getReceiverType","","",null,null],[5,"clang_Cursor_getSpellingNameRange","","",null,null],[5,"clang_Cursor_getTranslationUnit","","",null,null],[5,"clang_Cursor_isBitField","","",null,null],[5,"clang_Cursor_isDynamicCall","","",null,null],[5,"clang_Cursor_isNull","","",null,null],[5,"clang_Cursor_isObjCOptional","","",null,null],[5,"clang_Cursor_isVariadic","","",null,null],[5,"clang_IndexAction_create","","",null,null],[5,"clang_IndexAction_dispose","","",null,null],[5,"clang_Location_isFromMainFile","","",null,null],[5,"clang_Location_isInSystemHeader","","",null,null],[5,"clang_ModuleMapDescriptor_create","","",null,null],[5,"clang_ModuleMapDescriptor_dispose","","",null,null],[5,"clang_ModuleMapDescriptor_setFrameworkModuleName","","",null,null],[5,"clang_ModuleMapDescriptor_setUmbrellaHeader","","",null,null],[5,"clang_ModuleMapDescriptor_writeToBuffer","","",null,null],[5,"clang_Module_getASTFile","","",null,null],[5,"clang_Module_getFullName","","",null,null],[5,"clang_Module_getName","","",null,null],[5,"clang_Module_getNumTopLevelHeaders","","",null,null],[5,"clang_Module_getParent","","",null,null],[5,"clang_Module_getTopLevelHeader","","",null,null],[5,"clang_Module_isSystem","","",null,null],[5,"clang_Range_isNull","","",null,null],[5,"clang_Type_getAlignOf","","",null,null],[5,"clang_Type_getCXXRefQualifier","","",null,null],[5,"clang_Type_getClassType","","",null,null],[5,"clang_Type_getNumTemplateArguments","","",null,null],[5,"clang_Type_getOffsetOf","","",null,null],[5,"clang_Type_getSizeOf","","",null,null],[5,"clang_Type_getTemplateArgumentAsType","","",null,null],[5,"clang_VirtualFileOverlay_addFileMapping","","",null,null],[5,"clang_VirtualFileOverlay_create","","",null,null],[5,"clang_VirtualFileOverlay_dispose","","",null,null],[5,"clang_VirtualFileOverlay_setCaseSensitivity","","",null,null],[5,"clang_VirtualFileOverlay_writeToBuffer","","",null,null],[5,"clang_annotateTokens","","",null,null],[5,"clang_codeCompleteAt","","",null,null],[5,"clang_codeCompleteGetContainerKind","","",null,null],[5,"clang_codeCompleteGetContainerUSR","","",null,null],[5,"clang_codeCompleteGetContexts","","",null,null],[5,"clang_codeCompleteGetDiagnostic","","",null,null],[5,"clang_codeCompleteGetNumDiagnostics","","",null,null],[5,"clang_codeCompleteGetObjCSelector","","",null,null],[5,"clang_constructUSR_ObjCCategory","","",null,null],[5,"clang_constructUSR_ObjCClass","","",null,null],[5,"clang_constructUSR_ObjCIvar","","",null,null],[5,"clang_constructUSR_ObjCMethod","","",null,null],[5,"clang_constructUSR_ObjCProperty","","",null,null],[5,"clang_constructUSR_ObjCProtocol","","",null,null],[5,"clang_createCXCursorSet","","",null,null],[5,"clang_createIndex","","",null,null],[5,"clang_createTranslationUnit","","",null,null],[5,"clang_createTranslationUnit2","","",null,null],[5,"clang_createTranslationUnitFromSourceFile","","",null,null],[5,"clang_defaultCodeCompleteOptions","","",null,null],[5,"clang_defaultDiagnosticDisplayOptions","","",null,null],[5,"clang_defaultEditingTranslationUnitOptions","","",null,null],[5,"clang_defaultReparseOptions","","",null,null],[5,"clang_defaultSaveOptions","","",null,null],[5,"clang_disposeCXCursorSet","","",null,null],[5,"clang_disposeCXPlatformAvailability","","",null,null],[5,"clang_disposeCXTUResourceUsage","","",null,null],[5,"clang_disposeCodeCompleteResults","","",null,null],[5,"clang_disposeDiagnostic","","",null,null],[5,"clang_disposeDiagnosticSet","","",null,null],[5,"clang_disposeIndex","","",null,null],[5,"clang_disposeOverriddenCursors","","",null,null],[5,"clang_disposeSourceRangeList","","",null,null],[5,"clang_disposeString","","",null,null],[5,"clang_disposeTokens","","",null,null],[5,"clang_disposeTranslationUnit","","",null,null],[5,"clang_enableStackTraces","","",null,null],[5,"clang_equalCursors","","",null,null],[5,"clang_equalLocations","","",null,null],[5,"clang_equalRanges","","",null,null],[5,"clang_equalTypes","","",null,null],[5,"clang_executeOnThread","","",null,null],[5,"clang_findIncludesInFile","","",null,null],[5,"clang_findReferencesInFile","","",null,null],[5,"clang_formatDiagnostic","","",null,null],[5,"clang_free","","",null,null],[5,"clang_getArgType","","",null,null],[5,"clang_getArrayElementType","","",null,null],[5,"clang_getArraySize","","",null,null],[5,"clang_getBuildSessionTimestamp","","",null,null],[5,"clang_getCString","","",null,null],[5,"clang_getCXTUResourceUsage","","",null,null],[5,"clang_getCXXAccessSpecifier","","",null,null],[5,"clang_getCanonicalCursor","","",null,null],[5,"clang_getCanonicalType","","",null,null],[5,"clang_getChildDiagnostics","","",null,null],[5,"clang_getClangVersion","","",null,null],[5,"clang_getCompletionAnnotation","","",null,null],[5,"clang_getCompletionAvailability","","",null,null],[5,"clang_getCompletionBriefComment","","",null,null],[5,"clang_getCompletionChunkCompletionString","","",null,null],[5,"clang_getCompletionChunkKind","","",null,null],[5,"clang_getCompletionChunkText","","",null,null],[5,"clang_getCompletionNumAnnotations","","",null,null],[5,"clang_getCompletionParent","","",null,null],[5,"clang_getCompletionPriority","","",null,null],[5,"clang_getCursor","","",null,null],[5,"clang_getCursorAvailability","","",null,null],[5,"clang_getCursorCompletionString","","",null,null],[5,"clang_getCursorDefinition","","",null,null],[5,"clang_getCursorDisplayName","","",null,null],[5,"clang_getCursorExtent","","",null,null],[5,"clang_getCursorKind","","",null,null],[5,"clang_getCursorKindSpelling","","",null,null],[5,"clang_getCursorLanguage","","",null,null],[5,"clang_getCursorLexicalParent","","",null,null],[5,"clang_getCursorLinkage","","",null,null],[5,"clang_getCursorLocation","","",null,null],[5,"clang_getCursorPlatformAvailability","","",null,null],[5,"clang_getCursorReferenceNameRange","","",null,null],[5,"clang_getCursorReferenced","","",null,null],[5,"clang_getCursorResultType","","",null,null],[5,"clang_getCursorSemanticParent","","",null,null],[5,"clang_getCursorSpelling","","",null,null],[5,"clang_getCursorType","","",null,null],[5,"clang_getCursorUSR","","",null,null],[5,"clang_getDeclObjCTypeEncoding","","",null,null],[5,"clang_getDefinitionSpellingAndExtent","","",null,null],[5,"clang_getDiagnostic","","",null,null],[5,"clang_getDiagnosticCategory","","",null,null],[5,"clang_getDiagnosticCategoryName","","",null,null],[5,"clang_getDiagnosticCategoryText","","",null,null],[5,"clang_getDiagnosticFixIt","","",null,null],[5,"clang_getDiagnosticInSet","","",null,null],[5,"clang_getDiagnosticLocation","","",null,null],[5,"clang_getDiagnosticNumFixIts","","",null,null],[5,"clang_getDiagnosticNumRanges","","",null,null],[5,"clang_getDiagnosticOption","","",null,null],[5,"clang_getDiagnosticRange","","",null,null],[5,"clang_getDiagnosticSetFromTU","","",null,null],[5,"clang_getDiagnosticSeverity","","",null,null],[5,"clang_getDiagnosticSpelling","","",null,null],[5,"clang_getElementType","","",null,null],[5,"clang_getEnumConstantDeclUnsignedValue","","",null,null],[5,"clang_getEnumConstantDeclValue","","",null,null],[5,"clang_getEnumDeclIntegerType","","",null,null],[5,"clang_getExpansionLocation","","",null,null],[5,"clang_getFieldDeclBitWidth","","",null,null],[5,"clang_getFile","","",null,null],[5,"clang_getFileLocation","","",null,null],[5,"clang_getFileName","","",null,null],[5,"clang_getFileTime","","",null,null],[5,"clang_getFileUniqueID","","",null,null],[5,"clang_getFunctionTypeCallingConv","","",null,null],[5,"clang_getIBOutletCollectionType","","",null,null],[5,"clang_getIncludedFile","","",null,null],[5,"clang_getInclusions","","",null,null],[5,"clang_getInstantiationLocation","","",null,null],[5,"clang_getLocation","","",null,null],[5,"clang_getLocationForOffset","","",null,null],[5,"clang_getModuleForFile","","",null,null],[5,"clang_getNullCursor","","",null,null],[5,"clang_getNullLocation","","",null,null],[5,"clang_getNullRange","","",null,null],[5,"clang_getNumArgTypes","","",null,null],[5,"clang_getNumCompletionChunks","","",null,null],[5,"clang_getNumDiagnostics","","",null,null],[5,"clang_getNumDiagnosticsInSet","","",null,null],[5,"clang_getNumElements","","",null,null],[5,"clang_getNumOverloadedDecls","","",null,null],[5,"clang_getOverloadedDecl","","",null,null],[5,"clang_getOverriddenCursors","","",null,null],[5,"clang_getPointeeType","","",null,null],[5,"clang_getPresumedLocation","","",null,null],[5,"clang_getRange","","",null,null],[5,"clang_getRangeEnd","","",null,null],[5,"clang_getRangeStart","","",null,null],[5,"clang_getRemappings","","",null,null],[5,"clang_getRemappingsFromFileList","","",null,null],[5,"clang_getResultType","","",null,null],[5,"clang_getSkippedRanges","","",null,null],[5,"clang_getSpecializedCursorTemplate","","",null,null],[5,"clang_getSpellingLocation","","",null,null],[5,"clang_getTUResourceUsageName","","",null,null],[5,"clang_getTemplateCursorKind","","",null,null],[5,"clang_getTokenExtent","","",null,null],[5,"clang_getTokenKind","","",null,null],[5,"clang_getTokenLocation","","",null,null],[5,"clang_getTokenSpelling","","",null,null],[5,"clang_getTranslationUnitCursor","","",null,null],[5,"clang_getTranslationUnitSpelling","","",null,null],[5,"clang_getTypeDeclaration","","",null,null],[5,"clang_getTypeKindSpelling","","",null,null],[5,"clang_getTypeSpelling","","",null,null],[5,"clang_getTypedefDeclUnderlyingType","","",null,null],[5,"clang_hashCursor","","",null,null],[5,"clang_indexLoc_getCXSourceLocation","","",null,null],[5,"clang_indexLoc_getFileLocation","","",null,null],[5,"clang_indexSourceFile","","",null,null],[5,"clang_indexTranslationUnit","","",null,null],[5,"clang_index_getCXXClassDeclInfo","","",null,null],[5,"clang_index_getClientContainer","","",null,null],[5,"clang_index_getClientEntity","","",null,null],[5,"clang_index_getIBOutletCollectionAttrInfo","","",null,null],[5,"clang_index_getObjCCategoryDeclInfo","","",null,null],[5,"clang_index_getObjCContainerDeclInfo","","",null,null],[5,"clang_index_getObjCInterfaceDeclInfo","","",null,null],[5,"clang_index_getObjCPropertyDeclInfo","","",null,null],[5,"clang_index_getObjCProtocolRefListInfo","","",null,null],[5,"clang_index_isEntityObjCContainerKind","","",null,null],[5,"clang_index_setClientContainer","","",null,null],[5,"clang_index_setClientEntity","","",null,null],[5,"clang_isAttribute","","",null,null],[5,"clang_isConstQualifiedType","","",null,null],[5,"clang_isCursorDefinition","","",null,null],[5,"clang_isDeclaration","","",null,null],[5,"clang_isExpression","","",null,null],[5,"clang_isFileMultipleIncludeGuarded","","",null,null],[5,"clang_isFunctionTypeVariadic","","",null,null],[5,"clang_isInvalid","","",null,null],[5,"clang_isPODType","","",null,null],[5,"clang_isPreprocessing","","",null,null],[5,"clang_isReference","","",null,null],[5,"clang_isRestrictQualifiedType","","",null,null],[5,"clang_isStatement","","",null,null],[5,"clang_isTranslationUnit","","",null,null],[5,"clang_isUnexposed","","",null,null],[5,"clang_isVirtualBase","","",null,null],[5,"clang_isVolatileQualifiedType","","",null,null],[5,"clang_loadDiagnostics","","",null,null],[5,"clang_parseTranslationUnit","","",null,null],[5,"clang_parseTranslationUnit2","","",null,null],[5,"clang_remap_dispose","","",null,null],[5,"clang_remap_getFilenames","","",null,null],[5,"clang_remap_getNumFiles","","",null,null],[5,"clang_reparseTranslationUnit","","",null,null],[5,"clang_saveTranslationUnit","","",null,null],[5,"clang_sortCodeCompletionResults","","",null,null],[5,"clang_toggleCrashRecovery","","",null,null],[5,"clang_tokenize","","",null,null],[5,"clang_visitChildren","","",null,null],[6,"CXClientData","","",null,null],[6,"CXCursorVisitor","","",null,null],[6,"CXInclusionVisitor","","",null,null],[17,"CXCodeComplete_IncludeMacros","","",null,null],[17,"CXCodeComplete_IncludeCodePatterns","","",null,null],[17,"CXCodeComplete_IncludeBriefComments","","",null,null],[17,"CXCompletionContext_Unexposed","","",null,null],[17,"CXCompletionContext_AnyType","","",null,null],[17,"CXCompletionContext_AnyValue","","",null,null],[17,"CXCompletionContext_ObjCObjectValue","","",null,null],[17,"CXCompletionContext_ObjCSelectorValue","","",null,null],[17,"CXCompletionContext_CXXClassTypeValue","","",null,null],[17,"CXCompletionContext_DotMemberAccess","","",null,null],[17,"CXCompletionContext_ArrowMemberAccess","","",null,null],[17,"CXCompletionContext_ObjCPropertyAccess","","",null,null],[17,"CXCompletionContext_EnumTag","","",null,null],[17,"CXCompletionContext_UnionTag","","",null,null],[17,"CXCompletionContext_StructTag","","",null,null],[17,"CXCompletionContext_ClassTag","","",null,null],[17,"CXCompletionContext_Namespace","","",null,null],[17,"CXCompletionContext_NestedNameSpecifier","","",null,null],[17,"CXCompletionContext_ObjCInterface","","",null,null],[17,"CXCompletionContext_ObjCProtocol","","",null,null],[17,"CXCompletionContext_ObjCCategory","","",null,null],[17,"CXCompletionContext_ObjCInstanceMessage","","",null,null],[17,"CXCompletionContext_ObjCClassMessage","","",null,null],[17,"CXCompletionContext_ObjCSelectorName","","",null,null],[17,"CXCompletionContext_MacroName","","",null,null],[17,"CXCompletionContext_NaturalLanguage","","",null,null],[17,"CXCompletionContext_Unknown","","",null,null],[17,"CXDiagnostic_DisplaySourceLocation","","",null,null],[17,"CXDiagnostic_DisplayColumn","","",null,null],[17,"CXDiagnostic_DisplaySourceRanges","","",null,null],[17,"CXDiagnostic_DisplayOption","","",null,null],[17,"CXDiagnostic_DisplayCategoryId","","",null,null],[17,"CXDiagnostic_DisplayCategoryName","","",null,null],[17,"CXGlobalOpt_None","","",null,null],[17,"CXGlobalOpt_ThreadBackgroundPriorityForIndexing","","",null,null],[17,"CXGlobalOpt_ThreadBackgroundPriorityForEditing","","",null,null],[17,"CXGlobalOpt_ThreadBackgroundPriorityForAll","","",null,null],[17,"CXIdxDeclFlag_Skipped","","",null,null],[17,"CXIndexOptNone","","",null,null],[17,"CXIndexOptSuppressRedundantRefs","","",null,null],[17,"CXIndexOptIndexFunctionLocalSymbols","","",null,null],[17,"CXIndexOptIndexImplicitTemplateInstantiations","","",null,null],[17,"CXIndexOptSuppressWarnings","","",null,null],[17,"CXIndexOptSkipParsedBodiesInSession","","",null,null],[17,"CXNameRange_WantQualifier","","",null,null],[17,"CXNameRange_WantTemplateArgs","","",null,null],[17,"CXNameRange_WantSinglePiece","","",null,null],[17,"CXObjCDeclQualifier_None","","",null,null],[17,"CXObjCDeclQualifier_In","","",null,null],[17,"CXObjCDeclQualifier_Inout","","",null,null],[17,"CXObjCDeclQualifier_Out","","",null,null],[17,"CXObjCDeclQualifier_Bycopy","","",null,null],[17,"CXObjCDeclQualifier_Byref","","",null,null],[17,"CXObjCDeclQualifier_Oneway","","",null,null],[17,"CXObjCPropertyAttr_noattr","","",null,null],[17,"CXObjCPropertyAttr_readonly","","",null,null],[17,"CXObjCPropertyAttr_getter","","",null,null],[17,"CXObjCPropertyAttr_assign","","",null,null],[17,"CXObjCPropertyAttr_readwrite","","",null,null],[17,"CXObjCPropertyAttr_retain","","",null,null],[17,"CXObjCPropertyAttr_copy","","",null,null],[17,"CXObjCPropertyAttr_nonatomic","","",null,null],[17,"CXObjCPropertyAttr_setter","","",null,null],[17,"CXObjCPropertyAttr_atomic","","",null,null],[17,"CXObjCPropertyAttr_weak","","",null,null],[17,"CXObjCPropertyAttr_strong","","",null,null],[17,"CXObjCPropertyAttr_unsafe_unretained","","",null,null],[17,"CXReparse_None","","",null,null],[17,"CXSaveTranslationUnit_None","","",null,null],[17,"CXTranslationUnit_None","","",null,null],[17,"CXTranslationUnit_DetailedPreprocessingRecord","","",null,null],[17,"CXTranslationUnit_Incomplete","","",null,null],[17,"CXTranslationUnit_PrecompiledPreamble","","",null,null],[17,"CXTranslationUnit_CacheCompletionResults","","",null,null],[17,"CXTranslationUnit_ForSerialization","","",null,null],[17,"CXTranslationUnit_CXXChainedPCH","","",null,null],[17,"CXTranslationUnit_SkipFunctionBodies","","",null,null],[17,"CXTranslationUnit_IncludeBriefCommentsInCodeCompletion","","",null,null],[11,"hash","","",63,null],[11,"eq","","",63,{"inputs":[{"name":"cxavailabilitykind"},{"name":"cxavailabilitykind"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"cxavailabilitykind"},{"name":"cxavailabilitykind"}],"output":{"name":"bool"}}],[11,"fmt","","",63,{"inputs":[{"name":"cxavailabilitykind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",63,{"inputs":[{"name":"cxavailabilitykind"}],"output":{"name":"cxavailabilitykind"}}],[11,"hash","","",64,null],[11,"eq","","",64,{"inputs":[{"name":"cxcallingconv"},{"name":"cxcallingconv"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"cxcallingconv"},{"name":"cxcallingconv"}],"output":{"name":"bool"}}],[11,"fmt","","",64,{"inputs":[{"name":"cxcallingconv"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",64,{"inputs":[{"name":"cxcallingconv"}],"output":{"name":"cxcallingconv"}}],[11,"hash","","",65,null],[11,"eq","","",65,{"inputs":[{"name":"cxchildvisitresult"},{"name":"cxchildvisitresult"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"cxchildvisitresult"},{"name":"cxchildvisitresult"}],"output":{"name":"bool"}}],[11,"fmt","","",65,{"inputs":[{"name":"cxchildvisitresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",65,{"inputs":[{"name":"cxchildvisitresult"}],"output":{"name":"cxchildvisitresult"}}],[11,"hash","","",66,null],[11,"eq","","",66,{"inputs":[{"name":"cxcompilationdatabase_error"},{"name":"cxcompilationdatabase_error"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"cxcompilationdatabase_error"},{"name":"cxcompilationdatabase_error"}],"output":{"name":"bool"}}],[11,"fmt","","",66,{"inputs":[{"name":"cxcompilationdatabase_error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",66,{"inputs":[{"name":"cxcompilationdatabase_error"}],"output":{"name":"cxcompilationdatabase_error"}}],[11,"hash","","",67,null],[11,"eq","","",67,{"inputs":[{"name":"cxcompletionchunkkind"},{"name":"cxcompletionchunkkind"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"cxcompletionchunkkind"},{"name":"cxcompletionchunkkind"}],"output":{"name":"bool"}}],[11,"fmt","","",67,{"inputs":[{"name":"cxcompletionchunkkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",67,{"inputs":[{"name":"cxcompletionchunkkind"}],"output":{"name":"cxcompletionchunkkind"}}],[11,"hash","","",68,null],[11,"eq","","",68,{"inputs":[{"name":"cxcursorkind"},{"name":"cxcursorkind"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"cxcursorkind"},{"name":"cxcursorkind"}],"output":{"name":"bool"}}],[11,"fmt","","",68,{"inputs":[{"name":"cxcursorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",68,{"inputs":[{"name":"cxcursorkind"}],"output":{"name":"cxcursorkind"}}],[11,"hash","","",69,null],[11,"eq","","",69,{"inputs":[{"name":"cxdiagnosticseverity"},{"name":"cxdiagnosticseverity"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"cxdiagnosticseverity"},{"name":"cxdiagnosticseverity"}],"output":{"name":"bool"}}],[11,"fmt","","",69,{"inputs":[{"name":"cxdiagnosticseverity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",69,{"inputs":[{"name":"cxdiagnosticseverity"}],"output":{"name":"cxdiagnosticseverity"}}],[11,"hash","","",70,null],[11,"eq","","",70,{"inputs":[{"name":"cxerrorcode"},{"name":"cxerrorcode"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"cxerrorcode"},{"name":"cxerrorcode"}],"output":{"name":"bool"}}],[11,"fmt","","",70,{"inputs":[{"name":"cxerrorcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",70,{"inputs":[{"name":"cxerrorcode"}],"output":{"name":"cxerrorcode"}}],[11,"hash","","",71,null],[11,"eq","","",71,{"inputs":[{"name":"cxidxattrkind"},{"name":"cxidxattrkind"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"cxidxattrkind"},{"name":"cxidxattrkind"}],"output":{"name":"bool"}}],[11,"fmt","","",71,{"inputs":[{"name":"cxidxattrkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",71,{"inputs":[{"name":"cxidxattrkind"}],"output":{"name":"cxidxattrkind"}}],[11,"hash","","",72,null],[11,"eq","","",72,{"inputs":[{"name":"cxidxentitycxxtemplatekind"},{"name":"cxidxentitycxxtemplatekind"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"cxidxentitycxxtemplatekind"},{"name":"cxidxentitycxxtemplatekind"}],"output":{"name":"bool"}}],[11,"fmt","","",72,{"inputs":[{"name":"cxidxentitycxxtemplatekind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",72,{"inputs":[{"name":"cxidxentitycxxtemplatekind"}],"output":{"name":"cxidxentitycxxtemplatekind"}}],[11,"hash","","",73,null],[11,"eq","","",73,{"inputs":[{"name":"cxidxentitykind"},{"name":"cxidxentitykind"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"cxidxentitykind"},{"name":"cxidxentitykind"}],"output":{"name":"bool"}}],[11,"fmt","","",73,{"inputs":[{"name":"cxidxentitykind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",73,{"inputs":[{"name":"cxidxentitykind"}],"output":{"name":"cxidxentitykind"}}],[11,"hash","","",74,null],[11,"eq","","",74,{"inputs":[{"name":"cxidxentitylanguage"},{"name":"cxidxentitylanguage"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"cxidxentitylanguage"},{"name":"cxidxentitylanguage"}],"output":{"name":"bool"}}],[11,"fmt","","",74,{"inputs":[{"name":"cxidxentitylanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",74,{"inputs":[{"name":"cxidxentitylanguage"}],"output":{"name":"cxidxentitylanguage"}}],[11,"hash","","",75,null],[11,"eq","","",75,{"inputs":[{"name":"cxidxentityrefkind"},{"name":"cxidxentityrefkind"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"cxidxentityrefkind"},{"name":"cxidxentityrefkind"}],"output":{"name":"bool"}}],[11,"fmt","","",75,{"inputs":[{"name":"cxidxentityrefkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",75,{"inputs":[{"name":"cxidxentityrefkind"}],"output":{"name":"cxidxentityrefkind"}}],[11,"hash","","",76,null],[11,"eq","","",76,{"inputs":[{"name":"cxidxobjccontainerkind"},{"name":"cxidxobjccontainerkind"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"cxidxobjccontainerkind"},{"name":"cxidxobjccontainerkind"}],"output":{"name":"bool"}}],[11,"fmt","","",76,{"inputs":[{"name":"cxidxobjccontainerkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",76,{"inputs":[{"name":"cxidxobjccontainerkind"}],"output":{"name":"cxidxobjccontainerkind"}}],[11,"hash","","",77,null],[11,"eq","","",77,{"inputs":[{"name":"cxlanguagekind"},{"name":"cxlanguagekind"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"cxlanguagekind"},{"name":"cxlanguagekind"}],"output":{"name":"bool"}}],[11,"fmt","","",77,{"inputs":[{"name":"cxlanguagekind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",77,{"inputs":[{"name":"cxlanguagekind"}],"output":{"name":"cxlanguagekind"}}],[11,"hash","","",78,null],[11,"eq","","",78,{"inputs":[{"name":"cxlinkagekind"},{"name":"cxlinkagekind"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"cxlinkagekind"},{"name":"cxlinkagekind"}],"output":{"name":"bool"}}],[11,"fmt","","",78,{"inputs":[{"name":"cxlinkagekind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",78,{"inputs":[{"name":"cxlinkagekind"}],"output":{"name":"cxlinkagekind"}}],[11,"hash","","",79,null],[11,"eq","","",79,{"inputs":[{"name":"cxloaddiag_error"},{"name":"cxloaddiag_error"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"cxloaddiag_error"},{"name":"cxloaddiag_error"}],"output":{"name":"bool"}}],[11,"fmt","","",79,{"inputs":[{"name":"cxloaddiag_error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",79,{"inputs":[{"name":"cxloaddiag_error"}],"output":{"name":"cxloaddiag_error"}}],[11,"hash","","",80,null],[11,"eq","","",80,{"inputs":[{"name":"cxrefqualifierkind"},{"name":"cxrefqualifierkind"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"cxrefqualifierkind"},{"name":"cxrefqualifierkind"}],"output":{"name":"bool"}}],[11,"fmt","","",80,{"inputs":[{"name":"cxrefqualifierkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",80,{"inputs":[{"name":"cxrefqualifierkind"}],"output":{"name":"cxrefqualifierkind"}}],[11,"hash","","",81,null],[11,"eq","","",81,{"inputs":[{"name":"cxresult"},{"name":"cxresult"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"cxresult"},{"name":"cxresult"}],"output":{"name":"bool"}}],[11,"fmt","","",81,{"inputs":[{"name":"cxresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",81,{"inputs":[{"name":"cxresult"}],"output":{"name":"cxresult"}}],[11,"hash","","",82,null],[11,"eq","","",82,{"inputs":[{"name":"cxsaveerror"},{"name":"cxsaveerror"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"cxsaveerror"},{"name":"cxsaveerror"}],"output":{"name":"bool"}}],[11,"fmt","","",82,{"inputs":[{"name":"cxsaveerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",82,{"inputs":[{"name":"cxsaveerror"}],"output":{"name":"cxsaveerror"}}],[11,"hash","","",83,null],[11,"eq","","",83,{"inputs":[{"name":"cxturesourceusagekind"},{"name":"cxturesourceusagekind"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"cxturesourceusagekind"},{"name":"cxturesourceusagekind"}],"output":{"name":"bool"}}],[11,"fmt","","",83,{"inputs":[{"name":"cxturesourceusagekind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",83,{"inputs":[{"name":"cxturesourceusagekind"}],"output":{"name":"cxturesourceusagekind"}}],[11,"hash","","",84,null],[11,"eq","","",84,{"inputs":[{"name":"cxtokenkind"},{"name":"cxtokenkind"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"cxtokenkind"},{"name":"cxtokenkind"}],"output":{"name":"bool"}}],[11,"fmt","","",84,{"inputs":[{"name":"cxtokenkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",84,{"inputs":[{"name":"cxtokenkind"}],"output":{"name":"cxtokenkind"}}],[11,"hash","","",85,null],[11,"eq","","",85,{"inputs":[{"name":"cxtypekind"},{"name":"cxtypekind"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"cxtypekind"},{"name":"cxtypekind"}],"output":{"name":"bool"}}],[11,"fmt","","",85,{"inputs":[{"name":"cxtypekind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",85,{"inputs":[{"name":"cxtypekind"}],"output":{"name":"cxtypekind"}}],[11,"hash","","",86,null],[11,"eq","","",86,{"inputs":[{"name":"cxtypelayouterror"},{"name":"cxtypelayouterror"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"cxtypelayouterror"},{"name":"cxtypelayouterror"}],"output":{"name":"bool"}}],[11,"fmt","","",86,{"inputs":[{"name":"cxtypelayouterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"cxtypelayouterror"}],"output":{"name":"cxtypelayouterror"}}],[11,"hash","","",87,null],[11,"eq","","",87,{"inputs":[{"name":"cxvisitorresult"},{"name":"cxvisitorresult"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"cxvisitorresult"},{"name":"cxvisitorresult"}],"output":{"name":"bool"}}],[11,"fmt","","",87,{"inputs":[{"name":"cxvisitorresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"cxvisitorresult"}],"output":{"name":"cxvisitorresult"}}],[11,"hash","","",88,null],[11,"eq","","",88,{"inputs":[{"name":"cx_cxxaccessspecifier"},{"name":"cx_cxxaccessspecifier"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"cx_cxxaccessspecifier"},{"name":"cx_cxxaccessspecifier"}],"output":{"name":"bool"}}],[11,"fmt","","",88,{"inputs":[{"name":"cx_cxxaccessspecifier"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"cx_cxxaccessspecifier"}],"output":{"name":"cx_cxxaccessspecifier"}}],[11,"hash","","",89,null],[11,"cmp","","",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"option"}}],[11,"lt","","",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"le","","",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"gt","","",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"ge","","",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"cxcodecomplete_flags"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"eq","","",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"fmt","","",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",89,{"inputs":[{"name":"cxcodecomplete_flags"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"all","","Returns the set containing all flags.",89,{"inputs":[{"name":"cxcodecomplete_flags"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",89,{"inputs":[{"name":"cxcodecomplete_flags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"c_uint"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",89,{"inputs":[{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",89,{"inputs":[{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"not","","Returns the complement of this set of flags.",89,{"inputs":[{"name":"cxcodecomplete_flags"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"from_iter","","",89,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"t"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"hash","","",90,null],[11,"cmp","","",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"option"}}],[11,"lt","","",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"le","","",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"gt","","",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"ge","","",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"clone","","",90,{"inputs":[{"name":"cxcompletioncontext"}],"output":{"name":"cxcompletioncontext"}}],[11,"eq","","",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"fmt","","",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",90,{"inputs":[{"name":"cxcompletioncontext"}],"output":{"name":"cxcompletioncontext"}}],[11,"all","","Returns the set containing all flags.",90,{"inputs":[{"name":"cxcompletioncontext"}],"output":{"name":"cxcompletioncontext"}}],[11,"bits","","Returns the raw value of the flags currently stored.",90,{"inputs":[{"name":"cxcompletioncontext"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"c_uint"}],"output":{"name":"cxcompletioncontext"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",90,{"inputs":[{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",90,{"inputs":[{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"cxcompletioncontext"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"cxcompletioncontext"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"cxcompletioncontext"}}],[11,"sub","","Returns the set difference of the two sets of flags.",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"cxcompletioncontext"}}],[11,"not","","Returns the complement of this set of flags.",90,{"inputs":[{"name":"cxcompletioncontext"}],"output":{"name":"cxcompletioncontext"}}],[11,"from_iter","","",90,{"inputs":[{"name":"cxcompletioncontext"},{"name":"t"}],"output":{"name":"cxcompletioncontext"}}],[11,"hash","","",91,null],[11,"cmp","","",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"option"}}],[11,"lt","","",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"le","","",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"gt","","",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"ge","","",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"clone","","",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"eq","","",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"fmt","","",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"all","","Returns the set containing all flags.",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"c_uint"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"sub","","Returns the set difference of the two sets of flags.",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"not","","Returns the complement of this set of flags.",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"from_iter","","",91,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"t"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"hash","","",92,null],[11,"cmp","","",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"option"}}],[11,"lt","","",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"le","","",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"gt","","",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"ge","","",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"clone","","",92,{"inputs":[{"name":"cxglobaloptflags"}],"output":{"name":"cxglobaloptflags"}}],[11,"eq","","",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"fmt","","",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",92,{"inputs":[{"name":"cxglobaloptflags"}],"output":{"name":"cxglobaloptflags"}}],[11,"all","","Returns the set containing all flags.",92,{"inputs":[{"name":"cxglobaloptflags"}],"output":{"name":"cxglobaloptflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",92,{"inputs":[{"name":"cxglobaloptflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"c_uint"}],"output":{"name":"cxglobaloptflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",92,{"inputs":[{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",92,{"inputs":[{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"cxglobaloptflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"cxglobaloptflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"cxglobaloptflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"cxglobaloptflags"}}],[11,"not","","Returns the complement of this set of flags.",92,{"inputs":[{"name":"cxglobaloptflags"}],"output":{"name":"cxglobaloptflags"}}],[11,"from_iter","","",92,{"inputs":[{"name":"cxglobaloptflags"},{"name":"t"}],"output":{"name":"cxglobaloptflags"}}],[11,"hash","","",93,null],[11,"cmp","","",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"option"}}],[11,"lt","","",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"le","","",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"gt","","",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"ge","","",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"clone","","",93,{"inputs":[{"name":"cxidxdeclinfoflags"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"eq","","",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"fmt","","",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",93,{"inputs":[{"name":"cxidxdeclinfoflags"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"all","","Returns the set containing all flags.",93,{"inputs":[{"name":"cxidxdeclinfoflags"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",93,{"inputs":[{"name":"cxidxdeclinfoflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"c_uint"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",93,{"inputs":[{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",93,{"inputs":[{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"not","","Returns the complement of this set of flags.",93,{"inputs":[{"name":"cxidxdeclinfoflags"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"from_iter","","",93,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"t"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"hash","","",94,null],[11,"cmp","","",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"option"}}],[11,"lt","","",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"le","","",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"gt","","",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"ge","","",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"clone","","",94,{"inputs":[{"name":"cxindexoptflags"}],"output":{"name":"cxindexoptflags"}}],[11,"eq","","",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"ne","","",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"fmt","","",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",94,{"inputs":[{"name":"cxindexoptflags"}],"output":{"name":"cxindexoptflags"}}],[11,"all","","Returns the set containing all flags.",94,{"inputs":[{"name":"cxindexoptflags"}],"output":{"name":"cxindexoptflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",94,{"inputs":[{"name":"cxindexoptflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"c_uint"}],"output":{"name":"cxindexoptflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",94,{"inputs":[{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",94,{"inputs":[{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"cxindexoptflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"cxindexoptflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"cxindexoptflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"cxindexoptflags"}}],[11,"not","","Returns the complement of this set of flags.",94,{"inputs":[{"name":"cxindexoptflags"}],"output":{"name":"cxindexoptflags"}}],[11,"from_iter","","",94,{"inputs":[{"name":"cxindexoptflags"},{"name":"t"}],"output":{"name":"cxindexoptflags"}}],[11,"hash","","",95,null],[11,"cmp","","",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"option"}}],[11,"lt","","",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"le","","",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"gt","","",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"ge","","",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"clone","","",95,{"inputs":[{"name":"cxnamerefflags"}],"output":{"name":"cxnamerefflags"}}],[11,"eq","","",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"fmt","","",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",95,{"inputs":[{"name":"cxnamerefflags"}],"output":{"name":"cxnamerefflags"}}],[11,"all","","Returns the set containing all flags.",95,{"inputs":[{"name":"cxnamerefflags"}],"output":{"name":"cxnamerefflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",95,{"inputs":[{"name":"cxnamerefflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"c_uint"}],"output":{"name":"cxnamerefflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",95,{"inputs":[{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",95,{"inputs":[{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"cxnamerefflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"cxnamerefflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"cxnamerefflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"cxnamerefflags"}}],[11,"not","","Returns the complement of this set of flags.",95,{"inputs":[{"name":"cxnamerefflags"}],"output":{"name":"cxnamerefflags"}}],[11,"from_iter","","",95,{"inputs":[{"name":"cxnamerefflags"},{"name":"t"}],"output":{"name":"cxnamerefflags"}}],[11,"hash","","",96,null],[11,"cmp","","",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"option"}}],[11,"lt","","",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"le","","",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"gt","","",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"ge","","",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"clone","","",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"eq","","",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"fmt","","",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"all","","Returns the set containing all flags.",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"bits","","Returns the raw value of the flags currently stored.",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"c_uint"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"sub","","Returns the set difference of the two sets of flags.",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"not","","Returns the complement of this set of flags.",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"from_iter","","",96,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"t"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"hash","","",97,null],[11,"cmp","","",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"option"}}],[11,"lt","","",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"le","","",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"gt","","",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"ge","","",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"clone","","",97,{"inputs":[{"name":"cxobjcpropertyattrkind"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"eq","","",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"ne","","",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"fmt","","",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",97,{"inputs":[{"name":"cxobjcpropertyattrkind"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"all","","Returns the set containing all flags.",97,{"inputs":[{"name":"cxobjcpropertyattrkind"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"bits","","Returns the raw value of the flags currently stored.",97,{"inputs":[{"name":"cxobjcpropertyattrkind"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"c_uint"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",97,{"inputs":[{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",97,{"inputs":[{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"sub","","Returns the set difference of the two sets of flags.",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"not","","Returns the complement of this set of flags.",97,{"inputs":[{"name":"cxobjcpropertyattrkind"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"from_iter","","",97,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"t"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"hash","","",98,null],[11,"cmp","","",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"option"}}],[11,"lt","","",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"le","","",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"gt","","",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"ge","","",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"clone","","",98,{"inputs":[{"name":"cxreparse_flags"}],"output":{"name":"cxreparse_flags"}}],[11,"eq","","",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"fmt","","",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",98,{"inputs":[{"name":"cxreparse_flags"}],"output":{"name":"cxreparse_flags"}}],[11,"all","","Returns the set containing all flags.",98,{"inputs":[{"name":"cxreparse_flags"}],"output":{"name":"cxreparse_flags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",98,{"inputs":[{"name":"cxreparse_flags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"c_uint"}],"output":{"name":"cxreparse_flags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",98,{"inputs":[{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",98,{"inputs":[{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"cxreparse_flags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"cxreparse_flags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"cxreparse_flags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"cxreparse_flags"}}],[11,"not","","Returns the complement of this set of flags.",98,{"inputs":[{"name":"cxreparse_flags"}],"output":{"name":"cxreparse_flags"}}],[11,"from_iter","","",98,{"inputs":[{"name":"cxreparse_flags"},{"name":"t"}],"output":{"name":"cxreparse_flags"}}],[11,"hash","","",99,null],[11,"cmp","","",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"option"}}],[11,"lt","","",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"le","","",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"gt","","",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"ge","","",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"clone","","",99,{"inputs":[{"name":"cxsavetranslationunit_flags"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"eq","","",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"fmt","","",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",99,{"inputs":[{"name":"cxsavetranslationunit_flags"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"all","","Returns the set containing all flags.",99,{"inputs":[{"name":"cxsavetranslationunit_flags"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",99,{"inputs":[{"name":"cxsavetranslationunit_flags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"c_uint"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",99,{"inputs":[{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",99,{"inputs":[{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"not","","Returns the complement of this set of flags.",99,{"inputs":[{"name":"cxsavetranslationunit_flags"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"from_iter","","",99,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"t"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"hash","","",100,null],[11,"cmp","","",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"option"}}],[11,"lt","","",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"le","","",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"gt","","",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"ge","","",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"clone","","",100,{"inputs":[{"name":"cxtranslationunit_flags"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"eq","","",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"fmt","","",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",100,{"inputs":[{"name":"cxtranslationunit_flags"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"all","","Returns the set containing all flags.",100,{"inputs":[{"name":"cxtranslationunit_flags"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",100,{"inputs":[{"name":"cxtranslationunit_flags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"c_uint"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",100,{"inputs":[{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",100,{"inputs":[{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"not","","Returns the complement of this set of flags.",100,{"inputs":[{"name":"cxtranslationunit_flags"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"from_iter","","",100,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"t"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"fmt","","",101,{"inputs":[{"name":"cxcompilationdatabase"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",101,{"inputs":[{"name":"cxcompilationdatabase"}],"output":{"name":"cxcompilationdatabase"}}],[11,"map","","",101,{"inputs":[{"name":"cxcompilationdatabase"},{"name":"f"}],"output":{"name":"option"}}],[11,"fmt","","",102,{"inputs":[{"name":"cxcompilecommand"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",102,{"inputs":[{"name":"cxcompilecommand"}],"output":{"name":"cxcompilecommand"}}],[11,"map","","",102,{"inputs":[{"name":"cxcompilecommand"},{"name":"f"}],"output":{"name":"option"}}],[11,"fmt","","",103,{"inputs":[{"name":"cxcompilecommands"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",103,{"inputs":[{"name":"cxcompilecommands"}],"output":{"name":"cxcompilecommands"}}],[11,"map","","",103,{"inputs":[{"name":"cxcompilecommands"},{"name":"f"}],"output":{"name":"option"}}],[11,"fmt","","",104,{"inputs":[{"name":"cxcompletionstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",104,{"inputs":[{"name":"cxcompletionstring"}],"output":{"name":"cxcompletionstring"}}],[11,"map","","",104,{"inputs":[{"name":"cxcompletionstring"},{"name":"f"}],"output":{"name":"option"}}],[11,"fmt","","",105,{"inputs":[{"name":"cxcursorset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",105,{"inputs":[{"name":"cxcursorset"}],"output":{"name":"cxcursorset"}}],[11,"map","","",105,{"inputs":[{"name":"cxcursorset"},{"name":"f"}],"output":{"name":"option"}}],[11,"fmt","","",106,{"inputs":[{"name":"cxdiagnostic"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",106,{"inputs":[{"name":"cxdiagnostic"}],"output":{"name":"cxdiagnostic"}}],[11,"map","","",106,{"inputs":[{"name":"cxdiagnostic"},{"name":"f"}],"output":{"name":"option"}}],[11,"fmt","","",107,{"inputs":[{"name":"cxdiagnosticset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",107,{"inputs":[{"name":"cxdiagnosticset"}],"output":{"name":"cxdiagnosticset"}}],[11,"map","","",107,{"inputs":[{"name":"cxdiagnosticset"},{"name":"f"}],"output":{"name":"option"}}],[11,"fmt","","",108,{"inputs":[{"name":"cxfile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",108,{"inputs":[{"name":"cxfile"}],"output":{"name":"cxfile"}}],[11,"map","","",108,{"inputs":[{"name":"cxfile"},{"name":"f"}],"output":{"name":"option"}}],[11,"fmt","","",109,{"inputs":[{"name":"cxidxclientastfile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",109,{"inputs":[{"name":"cxidxclientastfile"}],"output":{"name":"cxidxclientastfile"}}],[11,"map","","",109,{"inputs":[{"name":"cxidxclientastfile"},{"name":"f"}],"output":{"name":"option"}}],[11,"fmt","","",110,{"inputs":[{"name":"cxidxclientcontainer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",110,{"inputs":[{"name":"cxidxclientcontainer"}],"output":{"name":"cxidxclientcontainer"}}],[11,"map","","",110,{"inputs":[{"name":"cxidxclientcontainer"},{"name":"f"}],"output":{"name":"option"}}],[11,"fmt","","",111,{"inputs":[{"name":"cxidxcliententity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",111,{"inputs":[{"name":"cxidxcliententity"}],"output":{"name":"cxidxcliententity"}}],[11,"map","","",111,{"inputs":[{"name":"cxidxcliententity"},{"name":"f"}],"output":{"name":"option"}}],[11,"fmt","","",112,{"inputs":[{"name":"cxidxclientfile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",112,{"inputs":[{"name":"cxidxclientfile"}],"output":{"name":"cxidxclientfile"}}],[11,"map","","",112,{"inputs":[{"name":"cxidxclientfile"},{"name":"f"}],"output":{"name":"option"}}],[11,"fmt","","",113,{"inputs":[{"name":"cxindex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",113,{"inputs":[{"name":"cxindex"}],"output":{"name":"cxindex"}}],[11,"map","","",113,{"inputs":[{"name":"cxindex"},{"name":"f"}],"output":{"name":"option"}}],[11,"fmt","","",114,{"inputs":[{"name":"cxindexaction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",114,{"inputs":[{"name":"cxindexaction"}],"output":{"name":"cxindexaction"}}],[11,"map","","",114,{"inputs":[{"name":"cxindexaction"},{"name":"f"}],"output":{"name":"option"}}],[11,"fmt","","",115,{"inputs":[{"name":"cxmodule"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",115,{"inputs":[{"name":"cxmodule"}],"output":{"name":"cxmodule"}}],[11,"map","","",115,{"inputs":[{"name":"cxmodule"},{"name":"f"}],"output":{"name":"option"}}],[11,"fmt","","",116,{"inputs":[{"name":"cxmodulemapdescriptor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",116,{"inputs":[{"name":"cxmodulemapdescriptor"}],"output":{"name":"cxmodulemapdescriptor"}}],[11,"map","","",116,{"inputs":[{"name":"cxmodulemapdescriptor"},{"name":"f"}],"output":{"name":"option"}}],[11,"fmt","","",117,{"inputs":[{"name":"cxremapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",117,{"inputs":[{"name":"cxremapping"}],"output":{"name":"cxremapping"}}],[11,"map","","",117,{"inputs":[{"name":"cxremapping"},{"name":"f"}],"output":{"name":"option"}}],[11,"fmt","","",118,{"inputs":[{"name":"cxtranslationunit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",118,{"inputs":[{"name":"cxtranslationunit"}],"output":{"name":"cxtranslationunit"}}],[11,"map","","",118,{"inputs":[{"name":"cxtranslationunit"},{"name":"f"}],"output":{"name":"option"}}],[11,"fmt","","",119,{"inputs":[{"name":"cxvirtualfileoverlay"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",119,{"inputs":[{"name":"cxvirtualfileoverlay"}],"output":{"name":"cxvirtualfileoverlay"}}],[11,"map","","",119,{"inputs":[{"name":"cxvirtualfileoverlay"},{"name":"f"}],"output":{"name":"option"}}],[11,"clone","","",29,{"inputs":[{"name":"cxcodecompleteresults"}],"output":{"name":"cxcodecompleteresults"}}],[11,"clone","","",30,{"inputs":[{"name":"cxcompletionresult"}],"output":{"name":"cxcompletionresult"}}],[11,"clone","","",31,{"inputs":[{"name":"cxcursor"}],"output":{"name":"cxcursor"}}],[11,"map","","",31,{"inputs":[{"name":"cxcursor"},{"name":"f"}],"output":{"name":"option"}}],[11,"clone","","",32,{"inputs":[{"name":"cxcursorandrangevisitor"}],"output":{"name":"cxcursorandrangevisitor"}}],[11,"clone","","",33,{"inputs":[{"name":"cxfileuniqueid"}],"output":{"name":"cxfileuniqueid"}}],[11,"clone","","",34,{"inputs":[{"name":"cxidxattrinfo"}],"output":{"name":"cxidxattrinfo"}}],[11,"clone","","",35,{"inputs":[{"name":"cxidxbaseclassinfo"}],"output":{"name":"cxidxbaseclassinfo"}}],[11,"clone","","",36,{"inputs":[{"name":"cxidxcxxclassdeclinfo"}],"output":{"name":"cxidxcxxclassdeclinfo"}}],[11,"clone","","",37,{"inputs":[{"name":"cxidxcontainerinfo"}],"output":{"name":"cxidxcontainerinfo"}}],[11,"clone","","",38,{"inputs":[{"name":"cxidxdeclinfo"}],"output":{"name":"cxidxdeclinfo"}}],[11,"clone","","",39,{"inputs":[{"name":"cxidxentityinfo"}],"output":{"name":"cxidxentityinfo"}}],[11,"clone","","",40,{"inputs":[{"name":"cxidxentityrefinfo"}],"output":{"name":"cxidxentityrefinfo"}}],[11,"clone","","",41,{"inputs":[{"name":"cxidxiboutletcollectionattrinfo"}],"output":{"name":"cxidxiboutletcollectionattrinfo"}}],[11,"clone","","",42,{"inputs":[{"name":"cxidximportedastfileinfo"}],"output":{"name":"cxidximportedastfileinfo"}}],[11,"clone","","",43,{"inputs":[{"name":"cxidxincludedfileinfo"}],"output":{"name":"cxidxincludedfileinfo"}}],[11,"clone","","",44,{"inputs":[{"name":"cxidxloc"}],"output":{"name":"cxidxloc"}}],[11,"clone","","",45,{"inputs":[{"name":"cxidxobjccategorydeclinfo"}],"output":{"name":"cxidxobjccategorydeclinfo"}}],[11,"clone","","",46,{"inputs":[{"name":"cxidxobjccontainerdeclinfo"}],"output":{"name":"cxidxobjccontainerdeclinfo"}}],[11,"clone","","",47,{"inputs":[{"name":"cxidxobjcinterfacedeclinfo"}],"output":{"name":"cxidxobjcinterfacedeclinfo"}}],[11,"clone","","",48,{"inputs":[{"name":"cxidxobjcpropertydeclinfo"}],"output":{"name":"cxidxobjcpropertydeclinfo"}}],[11,"clone","","",49,{"inputs":[{"name":"cxidxobjcprotocolrefinfo"}],"output":{"name":"cxidxobjcprotocolrefinfo"}}],[11,"clone","","",50,{"inputs":[{"name":"cxidxobjcprotocolreflistinfo"}],"output":{"name":"cxidxobjcprotocolreflistinfo"}}],[11,"clone","","",51,{"inputs":[{"name":"cxplatformavailability"}],"output":{"name":"cxplatformavailability"}}],[11,"clone","","",52,{"inputs":[{"name":"cxsourcelocation"}],"output":{"name":"cxsourcelocation"}}],[11,"map","","",52,{"inputs":[{"name":"cxsourcelocation"},{"name":"f"}],"output":{"name":"option"}}],[11,"clone","","",53,{"inputs":[{"name":"cxsourcerange"}],"output":{"name":"cxsourcerange"}}],[11,"map","","",53,{"inputs":[{"name":"cxsourcerange"},{"name":"f"}],"output":{"name":"option"}}],[11,"clone","","",54,{"inputs":[{"name":"cxsourcerangelist"}],"output":{"name":"cxsourcerangelist"}}],[11,"clone","","",55,{"inputs":[{"name":"cxstring"}],"output":{"name":"cxstring"}}],[11,"map","","",55,{"inputs":[{"name":"cxstring"},{"name":"f"}],"output":{"name":"option"}}],[11,"clone","","",56,{"inputs":[{"name":"cxturesourceusage"}],"output":{"name":"cxturesourceusage"}}],[11,"clone","","",57,{"inputs":[{"name":"cxturesourceusageentry"}],"output":{"name":"cxturesourceusageentry"}}],[11,"clone","","",58,{"inputs":[{"name":"cxtoken"}],"output":{"name":"cxtoken"}}],[11,"clone","","",59,{"inputs":[{"name":"cxtype"}],"output":{"name":"cxtype"}}],[11,"map","","",59,{"inputs":[{"name":"cxtype"},{"name":"f"}],"output":{"name":"option"}}],[11,"clone","","",60,{"inputs":[{"name":"cxunsavedfile"}],"output":{"name":"cxunsavedfile"}}],[11,"clone","","",61,{"inputs":[{"name":"cxversion"}],"output":{"name":"cxversion"}}],[11,"map","","",61,{"inputs":[{"name":"cxversion"},{"name":"f"}],"output":{"name":"option"}}],[11,"clone","","",62,{"inputs":[{"name":"indexercallbacks"}],"output":{"name":"indexercallbacks"}}],[8,"Nullable","clang","A type which may be null or otherwise invalid.",null,null],[10,"map","","Transforms this value into an `Option<U>`, mapping a null value to `None` and a non-null\nvalue to `Some(v)` where `v` is the result of applying the supplied function to this value.",120,{"inputs":[{"name":"nullable"},{"name":"f"}],"output":{"name":"option"}}],[11,"hash","","",10,null],[11,"eq","","",10,{"inputs":[{"name":"accessibility"},{"name":"accessibility"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"accessibility"},{"name":"accessibility"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"accessibility"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"accessibility"}],"output":{"name":"accessibility"}}],[11,"hash","","",11,null],[11,"eq","","",11,{"inputs":[{"name":"alignoferror"},{"name":"alignoferror"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"alignoferror"},{"name":"alignoferror"}],"output":{"name":"bool"}}],[11,"fmt","","",11,{"inputs":[{"name":"alignoferror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"alignoferror"}],"output":{"name":"alignoferror"}}],[11,"hash","","",12,null],[11,"eq","","",12,{"inputs":[{"name":"availability"},{"name":"availability"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"availability"},{"name":"availability"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"availability"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"availability"}],"output":{"name":"availability"}}],[11,"hash","","",13,null],[11,"eq","","",13,{"inputs":[{"name":"callingconvention"},{"name":"callingconvention"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"callingconvention"},{"name":"callingconvention"}],"output":{"name":"bool"}}],[11,"fmt","","",13,{"inputs":[{"name":"callingconvention"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"callingconvention"}],"output":{"name":"callingconvention"}}],[11,"eq","","",14,{"inputs":[{"name":"completionchunk"},{"name":"completionchunk"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"completionchunk"},{"name":"completionchunk"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"completionchunk"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"completionchunk"}],"output":{"name":"completionchunk"}}],[11,"get_text","","Returns the text associated with this completion chunk.",14,{"inputs":[{"name":"completionchunk"}],"output":{"name":"string"}}],[11,"hash","","",15,null],[11,"eq","","",15,{"inputs":[{"name":"entitykind"},{"name":"entitykind"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"entitykind"},{"name":"entitykind"}],"output":{"name":"bool"}}],[11,"fmt","","",15,{"inputs":[{"name":"entitykind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"entitykind"}],"output":{"name":"entitykind"}}],[11,"hash","","",16,null],[11,"eq","","",16,{"inputs":[{"name":"entityvisitresult"},{"name":"entityvisitresult"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"entityvisitresult"},{"name":"entityvisitresult"}],"output":{"name":"bool"}}],[11,"fmt","","",16,{"inputs":[{"name":"entityvisitresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"entityvisitresult"}],"output":{"name":"entityvisitresult"}}],[11,"hash","","",17,null],[11,"eq","","",17,{"inputs":[{"name":"fixit"},{"name":"fixit"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"fixit"},{"name":"fixit"}],"output":{"name":"bool"}}],[11,"fmt","","",17,{"inputs":[{"name":"fixit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"fixit"}],"output":{"name":"fixit"}}],[11,"hash","","",18,null],[11,"eq","","",18,{"inputs":[{"name":"language"},{"name":"language"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"language"},{"name":"language"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"language"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"language"}],"output":{"name":"language"}}],[11,"hash","","",19,null],[11,"eq","","",19,{"inputs":[{"name":"linkage"},{"name":"linkage"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"linkage"},{"name":"linkage"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"linkage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"linkage"}],"output":{"name":"linkage"}}],[11,"hash","","",20,null],[11,"eq","","",20,{"inputs":[{"name":"memoryusage"},{"name":"memoryusage"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"memoryusage"},{"name":"memoryusage"}],"output":{"name":"bool"}}],[11,"fmt","","",20,{"inputs":[{"name":"memoryusage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"memoryusage"}],"output":{"name":"memoryusage"}}],[11,"hash","","",21,null],[11,"eq","","",21,{"inputs":[{"name":"offsetoferror"},{"name":"offsetoferror"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"offsetoferror"},{"name":"offsetoferror"}],"output":{"name":"bool"}}],[11,"fmt","","",21,{"inputs":[{"name":"offsetoferror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"offsetoferror"}],"output":{"name":"offsetoferror"}}],[11,"hash","","",22,null],[11,"eq","","",22,{"inputs":[{"name":"refqualifier"},{"name":"refqualifier"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"refqualifier"},{"name":"refqualifier"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"refqualifier"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"refqualifier"}],"output":{"name":"refqualifier"}}],[11,"hash","","",23,null],[11,"eq","","",23,{"inputs":[{"name":"saveerror"},{"name":"saveerror"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"saveerror"},{"name":"saveerror"}],"output":{"name":"bool"}}],[11,"fmt","","",23,{"inputs":[{"name":"saveerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"saveerror"}],"output":{"name":"saveerror"}}],[11,"hash","","",24,null],[11,"eq","","",24,{"inputs":[{"name":"severity"},{"name":"severity"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"severity"},{"name":"severity"}],"output":{"name":"bool"}}],[11,"fmt","","",24,{"inputs":[{"name":"severity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"severity"}],"output":{"name":"severity"}}],[11,"hash","","",25,null],[11,"eq","","",25,{"inputs":[{"name":"sizeoferror"},{"name":"sizeoferror"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"sizeoferror"},{"name":"sizeoferror"}],"output":{"name":"bool"}}],[11,"fmt","","",25,{"inputs":[{"name":"sizeoferror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"sizeoferror"}],"output":{"name":"sizeoferror"}}],[11,"hash","","",26,null],[11,"eq","","",26,{"inputs":[{"name":"sourceerror"},{"name":"sourceerror"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"sourceerror"},{"name":"sourceerror"}],"output":{"name":"bool"}}],[11,"fmt","","",26,{"inputs":[{"name":"sourceerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"sourceerror"}],"output":{"name":"sourceerror"}}],[11,"hash","","",27,null],[11,"eq","","",27,{"inputs":[{"name":"tokenkind"},{"name":"tokenkind"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"tokenkind"},{"name":"tokenkind"}],"output":{"name":"bool"}}],[11,"fmt","","",27,{"inputs":[{"name":"tokenkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"tokenkind"}],"output":{"name":"tokenkind"}}],[11,"hash","","",28,null],[11,"eq","","",28,{"inputs":[{"name":"typekind"},{"name":"typekind"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"typekind"},{"name":"typekind"}],"output":{"name":"bool"}}],[11,"fmt","","",28,{"inputs":[{"name":"typekind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"typekind"}],"output":{"name":"typekind"}}],[11,"new","core::sync::atomic","Creates a new `AtomicBool`.",121,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",121,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",121,null],[11,"swap","","Stores a value into the bool, returning the old value.",121,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",121,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",121,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",121,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",121,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",121,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"default","core::num","",122,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"fmt","","",122,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",122,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",122,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",122,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",122,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",122,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",122,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",122,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",122,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",122,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",122,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",122,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",122,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",122,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",122,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",122,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",122,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",122,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",122,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",122,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",122,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",122,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",122,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",122,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",122,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",122,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",122,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",122,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",122,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",122,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",122,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",122,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",122,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"eq","core::num::flt2dec::decoder","",123,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",123,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",123,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",124,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",124,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",124,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec","",125,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",125,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",125,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",125,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",125,null],[11,"clone","","",126,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",126,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",126,null],[11,"fmt","","",127,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",127,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",127,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",127,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num::dec2flt::rawfp","",128,{"inputs":[{"name":"unpacked"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",128,{"inputs":[{"name":"unpacked"}],"output":{"name":"unpacked"}}],[11,"new","","",128,{"inputs":[{"name":"unpacked"},{"name":"u64"},{"name":"i16"}],"output":{"name":"unpacked"}}],[11,"fmt","core::num::dec2flt::parse","",129,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",130,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",130,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"fmt","","",130,{"inputs":[{"name":"decimal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",130,null],[11,"eq","","",131,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"ne","","",131,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"fmt","","",131,{"inputs":[{"name":"parseresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::dec2flt","",132,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",132,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",132,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",132,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",133,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",133,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",133,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",133,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",132,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum","Makes a bignum from one digit.",134,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"from_u64","","Makes a bignum from `u64` value.",134,{"inputs":[{"name":"big32x40"},{"name":"u64"}],"output":{"name":"big32x40"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",134,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",134,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",134,{"inputs":[{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",134,{"inputs":[{"name":"big32x40"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",134,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"add_small","","",134,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",134,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",134,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",134,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",134,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",134,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",134,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",134,null],[11,"eq","","",134,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",134,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"option"}}],[11,"cmp","","",134,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"ordering"}}],[11,"clone","","",134,{"inputs":[{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"fmt","","",134,{"inputs":[{"name":"big32x40"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum::tests","Makes a bignum from one digit.",135,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",135,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",135,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",135,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",135,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",135,{"inputs":[{"name":"big8x3"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",135,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"add_small","","",135,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",135,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",135,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",135,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",135,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",135,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",135,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",135,null],[11,"eq","","",135,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",135,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",135,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",135,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",135,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::num::diy_float","",136,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",136,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"mul","","Returns a correctly rounded product of itself and `other`.",136,{"inputs":[{"name":"fp"},{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize","","Normalizes itself so that the resulting mantissa is at least `2^63`.",136,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize_to","","Normalizes itself to have the shared exponent.\nIt can only decrease the exponent (and thus increase the mantissa).",136,{"inputs":[{"name":"fp"},{"name":"i16"}],"output":{"name":"fp"}}],[11,"fmt","core::num","",137,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",137,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",137,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",138,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",138,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",138,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",139,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",139,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",139,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",138,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",140,null],[11,"fmt","","",140,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",140,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",140,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",140,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",140,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",140,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",140,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",140,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",140,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",140,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",141,null],[11,"get","","Dereferences the content.",141,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",141,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",141,null],[11,"fmt","","",141,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",142,null],[11,"clone","","",142,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",142,null],[11,"fmt","","",142,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",143,null],[11,"eq","","",143,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",143,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",143,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",143,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"default","","",143,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",144,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",144,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",144,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",145,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",145,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",145,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",146,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",146,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",146,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",147,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",147,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",147,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",147,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",148,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",148,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",148,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",148,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",148,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",148,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","","",149,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",149,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",149,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",149,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",149,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",149,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",149,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",149,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",150,null],[11,"fmt","","",150,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",150,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",150,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",150,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",121,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",151,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",152,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",153,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",154,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicIsize`.",151,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",151,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",151,null],[11,"swap","","Stores a value into the isize, returning the old value.",151,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",151,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",151,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",151,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",151,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",151,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",151,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",152,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",152,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",152,null],[11,"swap","","Stores a value into the usize, returning the old value.",152,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",152,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",152,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",152,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",152,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",152,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",152,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",153,null],[11,"load","","Loads a value from the pointer.",153,null],[11,"store","","Stores a value into the pointer.",153,null],[11,"swap","","Stores a value into the pointer, returning the old value.",153,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",153,null],[11,"fmt","","",152,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",151,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",121,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",153,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",155,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",155,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",155,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",155,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",155,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",155,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",155,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",156,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",156,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",156,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",156,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",157,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",157,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",157,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",157,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",157,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",157,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",157,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",157,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",157,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",158,null],[11,"clone","","",158,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",159,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",159,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",159,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",159,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",160,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",160,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",161,null],[11,"deref","","",160,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",160,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",162,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",162,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",162,null],[11,"clone","core::char","",163,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",164,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",163,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"size_hint","","",163,null],[11,"clone","","",165,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",166,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",165,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",165,null],[11,"clone","core::iter","",167,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",167,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",167,null],[11,"next_back","","",167,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",168,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",168,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",168,null],[11,"next_back","","",168,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",169,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",169,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",169,null],[11,"clone","","",170,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",171,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",170,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",170,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",170,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",170,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",170,null],[11,"next_back","","",170,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",172,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",172,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",172,null],[11,"next_back","","",172,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",173,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",173,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",173,null],[11,"next_back","","",173,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",174,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",174,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",174,null],[11,"next_back","","",174,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",175,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",175,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",175,null],[11,"next_back","","",175,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",176,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",176,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",176,null],[11,"nth","","",176,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",176,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",176,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",177,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",177,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",177,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",177,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",177,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",177,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",177,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks if the iterator has finished iterating.",177,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",178,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",178,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",178,null],[11,"clone","","",179,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",179,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",179,null],[11,"clone","","",180,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",180,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",180,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",180,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",180,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",180,null],[11,"clone","","",181,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",181,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",181,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",181,null],[11,"clone","","",182,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",182,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",182,null],[11,"clone","","",183,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",183,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",183,null],[11,"next_back","","",183,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",184,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",184,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",184,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",184,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",184,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",184,null],[11,"next_back","","",184,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",185,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",185,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",185,null],[11,"next_back","","",185,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",186,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",146,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",145,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",186,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",186,null],[11,"clone","","",187,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",187,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",187,null],[11,"next_back","","",187,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",186,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",186,null],[11,"next","core::ops","",145,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",145,null],[11,"next_back","","",145,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",146,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",188,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",188,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",188,null],[11,"next_back","","",188,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",189,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",189,null],[11,"next_back","","",189,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",189,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",189,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",189,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",190,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",190,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",190,null],[11,"next_back","","",190,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",190,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",191,null],[11,"fmt","","",191,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",191,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",191,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",191,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",191,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",191,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",191,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",191,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",191,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",191,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",191,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",191,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",191,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",191,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",191,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",191,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",191,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",191,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",191,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",191,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",191,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",191,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",191,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",191,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",191,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",191,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",191,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",191,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",191,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",191,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option<&T>` to an `Option<T>` by cloning the contents of the\noption.",191,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",191,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",191,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",191,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",192,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",192,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",192,null],[11,"next_back","","",192,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",193,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",193,null],[11,"next_back","","",193,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",193,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",194,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",194,null],[11,"next_back","","",194,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",195,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",195,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",195,null],[11,"next_back","","",195,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",191,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",196,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",197,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",198,null],[11,"fmt","","",198,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",198,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",198,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",198,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",198,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",198,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",198,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",198,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",198,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",198,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",198,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",198,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",198,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",198,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",198,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",198,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",198,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",198,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",198,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",198,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",198,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",198,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",198,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",198,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",198,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",198,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",198,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",198,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",198,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",198,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",199,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",199,null],[11,"next_back","","",199,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",199,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",200,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",200,null],[11,"next_back","","",200,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",201,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",201,null],[11,"next_back","","",201,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",198,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",202,null],[11,"next","","",202,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",202,null],[11,"count","","",202,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",202,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",202,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",202,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",202,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",203,null],[11,"next","","",203,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",203,null],[11,"count","","",203,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",203,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",203,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",203,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",204,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",204,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",204,null],[11,"next_back","","",204,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",204,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",205,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",205,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",205,null],[11,"next_back","","",205,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",206,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",206,null],[11,"next","","",207,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",207,null],[11,"next","","",208,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",208,null],[11,"next","","",209,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",209,null],[11,"next","","",210,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",210,null],[11,"clone","","",211,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",211,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",211,null],[11,"count","","",211,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",211,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",211,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",211,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",212,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",212,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",212,null],[11,"count","","",212,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",212,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",212,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",212,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",213,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",213,null],[11,"count","","",213,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",213,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",213,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",213,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",214,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",214,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",214,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",214,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",215,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",216,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",215,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",215,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",215,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",217,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",217,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",217,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",217,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",217,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",217,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",217,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",217,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",218,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",218,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",218,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",218,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",218,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",218,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",218,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",218,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",219,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",219,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",219,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",219,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",219,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",219,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",219,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",219,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",220,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",220,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",221,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",221,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",222,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",222,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",220,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",220,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",220,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",220,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",220,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",223,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",223,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",224,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",224,null],[11,"matching","","",224,null],[11,"use_early_reject","","",225,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",225,null],[11,"matching","","",225,null],[11,"eq","core::str","",226,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",226,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",226,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",226,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",226,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",227,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",227,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",227,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",227,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",227,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",227,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",228,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",228,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",228,null],[11,"next_back","","",228,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",228,{"inputs":[{"name":"chars"}],"output":{"name":"str"}}],[11,"clone","","",229,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",229,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",229,null],[11,"next_back","","",229,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",229,{"inputs":[{"name":"charindices"}],"output":{"name":"str"}}],[11,"clone","","",230,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"next","","",230,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",230,null],[11,"count","","",230,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"last","","",230,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"nth","","",230,{"inputs":[{"name":"bytes"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next_back","","",230,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",230,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",231,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",232,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",232,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",233,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",233,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",232,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",233,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",234,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",234,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",235,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",235,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",234,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",235,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",236,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",237,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",237,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",238,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",238,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",239,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",240,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",240,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",241,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",241,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",240,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",241,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",242,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",243,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",243,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",244,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",244,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",243,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",244,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",245,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",245,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",245,null],[11,"next_back","","",245,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",246,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",247,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",247,null],[11,"call_mut","","",247,null],[11,"call_once","","",247,null],[11,"next","","",246,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",246,null],[11,"next_back","","",246,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",248,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",249,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",249,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",249,null],[11,"finish","","",249,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",249,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",249,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",250,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",250,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",250,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",251,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",251,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",251,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",252,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",252,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",252,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",253,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",253,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",253,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",254,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",254,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",254,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",255,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",255,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",255,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",256,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",256,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",256,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",256,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",256,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",256,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",256,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",256,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",256,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",256,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",256,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",256,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",256,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",256,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",256,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",256,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",256,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",256,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",256,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",256,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",256,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",257,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",258,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",258,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",259,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",259,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",259,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",260,null],[11,"entry","","Adds a new entry to the set output.",261,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",261,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",261,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",262,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",262,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",262,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",263,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",263,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",263,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"clone","core::fmt::rt::v1","",264,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",265,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",266,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",266,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",266,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",267,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",268,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","core::fmt","",269,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",269,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",270,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",271,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",272,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",272,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",272,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",273,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",273,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",273,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",273,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",273,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",273,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",273,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",273,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",273,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"sign_plus","","Determines if the `+` flag was specified.",273,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_minus","","Determines if the `-` flag was specified.",273,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"alternate","","Determines if the `#` flag was specified.",273,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",273,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",273,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",273,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",273,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",273,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",273,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",273,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",273,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",273,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",269,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",143,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",155,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",157,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",159,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",160,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","clang","Constructs a new `Clang`.",274,{"inputs":[{"name":"clang"}],"output":{"name":"result"}}],[11,"get_version","","Returns the version string for the version of `libclang` in use.",274,{"inputs":[{"name":"clang"}],"output":{"name":"string"}}],[11,"drop","","",274,{"inputs":[{"name":"clang"}],"output":null}],[11,"fmt","","",274,{"inputs":[{"name":"clang"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_directory","","Constructs a new `CompilationDatabase` from a directory containing a `compile_commands.json`\nfile.",275,{"inputs":[{"name":"compilationdatabase"},{"name":"clang"},{"name":"d"}],"output":{"name":"result"}}],[11,"get_all_commands","","Returns all the compilation commands in this compilation database.",275,{"inputs":[{"name":"compilationdatabase"}],"output":{"name":"vec"}}],[11,"get_commands","","Returns all the compilation commands for the supplied source file in this compilation\ndatabase.",275,{"inputs":[{"name":"compilationdatabase"},{"name":"f"}],"output":{"name":"vec"}}],[11,"drop","","",275,{"inputs":[{"name":"compilationdatabase"}],"output":null}],[11,"fmt","","",275,{"inputs":[{"name":"compilationdatabase"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",276,{"inputs":[{"name":"compilecommand"}],"output":{"name":"compilecommand"}}],[11,"get_arguments","","Returns the arguments in the compiler invocation for this compile command.",276,{"inputs":[{"name":"compilecommand"}],"output":{"name":"vec"}}],[11,"get_mapped_source_files","","Returns the path to and contents of the source files mapped by this compile command.",276,{"inputs":[{"name":"compilecommand"}],"output":{"name":"vec"}}],[11,"get_working_directory","","Returns the working directory of this compile command.",276,{"inputs":[{"name":"compilecommand"}],"output":{"name":"pathbuf"}}],[11,"fmt","","",276,{"inputs":[{"name":"compilecommand"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"eq","","",0,{"inputs":[{"name":"completioncontext"},{"name":"completioncontext"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"completioncontext"},{"name":"completioncontext"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"completioncontext"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"completioncontext"}],"output":{"name":"completioncontext"}}],[11,"from","","",0,{"inputs":[{"name":"completioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"completioncontext"}}],[11,"into","","",0,{"inputs":[{"name":"completioncontext"}],"output":{"name":"cxcompletioncontext"}}],[11,"hash","","",1,null],[11,"eq","","",1,{"inputs":[{"name":"completionoptions"},{"name":"completionoptions"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"completionoptions"},{"name":"completionoptions"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"completionoptions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"completionoptions"}],"output":{"name":"completionoptions"}}],[11,"from","","",1,{"inputs":[{"name":"completionoptions"},{"name":"cxcodecomplete_flags"}],"output":{"name":"completionoptions"}}],[11,"into","","",1,{"inputs":[{"name":"completionoptions"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"default","","",1,{"inputs":[{"name":"completionoptions"}],"output":{"name":"completionoptions"}}],[11,"clone","","",277,{"inputs":[{"name":"completionresult"}],"output":{"name":"completionresult"}}],[11,"get_kind","","Returns the categorization of the AST entity this code completion result produces.",277,{"inputs":[{"name":"completionresult"}],"output":{"name":"entitykind"}}],[11,"get_string","","Returns the completion string for this code completion result.",277,{"inputs":[{"name":"completionresult"}],"output":{"name":"completionstring"}}],[11,"cmp","","",277,{"inputs":[{"name":"completionresult"},{"name":"completionresult"}],"output":{"name":"ordering"}}],[11,"eq","","",277,{"inputs":[{"name":"completionresult"},{"name":"completionresult"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",277,{"inputs":[{"name":"completionresult"},{"name":"completionresult"}],"output":{"name":"option"}}],[11,"fmt","","",277,{"inputs":[{"name":"completionresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_container_kind","","Returns the categorization of the entity that contains the code completion context for this\nset of code completion results and whether that entity is incomplete, if applicable.",278,{"inputs":[{"name":"completionresults"}],"output":{"name":"option"}}],[11,"get_context","","Returns the code completion context for this set of code completion results, if any.",278,{"inputs":[{"name":"completionresults"}],"output":{"name":"option"}}],[11,"get_diagnostics","","Returns the diagnostics that were produced prior to the code completion context for this set\nof code completion results.",278,{"inputs":[{"name":"completionresults"},{"name":"translationunit"}],"output":{"name":"vec"}}],[11,"get_objc_selector","","Returns the selector or partial selector that has been entered this far for the Objective-C\nmessage send context for this set of code completion results.",278,{"inputs":[{"name":"completionresults"}],"output":{"name":"option"}}],[11,"get_results","","Returns the code completion results in this set of code completion results.",278,{"inputs":[{"name":"completionresults"}],"output":{"name":"vec"}}],[11,"get_usr","","Returns the USR for the entity that contains the code completion context for this set of\ncode completion results, if applicable.",278,{"inputs":[{"name":"completionresults"}],"output":{"name":"option"}}],[11,"drop","","",278,{"inputs":[{"name":"completionresults"}],"output":null}],[11,"fmt","","",278,{"inputs":[{"name":"completionresults"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",279,{"inputs":[{"name":"completionstring"}],"output":{"name":"completionstring"}}],[11,"get_annotations","","Returns the annotations associated with this completion string.",279,{"inputs":[{"name":"completionstring"}],"output":{"name":"vec"}}],[11,"get_availability","","Returns the availability of this completion string.",279,{"inputs":[{"name":"completionstring"}],"output":{"name":"availability"}}],[11,"get_chunks","","Returns the chunks of this completion string.",279,{"inputs":[{"name":"completionstring"}],"output":{"name":"vec"}}],[11,"get_comment_brief","","Returns the documentation comment brief associated with the declaration this completion\nstring refers to, if applicable.",279,{"inputs":[{"name":"completionstring"}],"output":{"name":"option"}}],[11,"get_parent_name","","Returns the name of the semantic parent of the declaration this completion string refers to,\nif applicable.",279,{"inputs":[{"name":"completionstring"}],"output":{"name":"option"}}],[11,"get_priority","","Returns an integer that represents how likely a user is to select this completion string as\ndetermined by internal heuristics. Smaller values indicate higher priorities.",279,{"inputs":[{"name":"completionstring"}],"output":{"name":"usize"}}],[11,"get_typed_text","","Returns the text of the typed text chunk for this completion string, if any.",279,{"inputs":[{"name":"completionstring"}],"output":{"name":"option"}}],[11,"cmp","","",279,{"inputs":[{"name":"completionstring"},{"name":"completionstring"}],"output":{"name":"ordering"}}],[11,"eq","","",279,{"inputs":[{"name":"completionstring"},{"name":"completionstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",279,{"inputs":[{"name":"completionstring"},{"name":"completionstring"}],"output":{"name":"option"}}],[11,"fmt","","",279,{"inputs":[{"name":"completionstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",280,{"inputs":[{"name":"diagnostic"}],"output":{"name":"diagnostic"}}],[11,"format","","Returns this diagnostic as a formatted string.",280,{"inputs":[{"name":"diagnostic"},{"name":"formatoptions"}],"output":{"name":"string"}}],[11,"get_children","","Returns the child diagnostics of this diagnostic.",280,{"inputs":[{"name":"diagnostic"}],"output":{"name":"vec"}}],[11,"get_fix_its","","Returns the fix-its for this diagnostic.",280,{"inputs":[{"name":"diagnostic"}],"output":{"name":"vec"}}],[11,"get_location","","Returns the source location of this diagnostic.",280,{"inputs":[{"name":"diagnostic"}],"output":{"name":"sourcelocation"}}],[11,"get_ranges","","Returns the source ranges of this diagnostic.",280,{"inputs":[{"name":"diagnostic"}],"output":{"name":"vec"}}],[11,"get_severity","","Returns the severity of this diagnostic.",280,{"inputs":[{"name":"diagnostic"}],"output":{"name":"severity"}}],[11,"get_text","","Returns the text of this diagnostic.",280,{"inputs":[{"name":"diagnostic"}],"output":{"name":"string"}}],[11,"fmt","","",280,{"inputs":[{"name":"diagnostic"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",280,{"inputs":[{"name":"diagnostic"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",281,{"inputs":[{"name":"entity"}],"output":{"name":"entity"}}],[11,"get_accessibility","","Returns the accessibility of this declaration or base class specifier, if applicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_arguments","","Returns the arguments of this function or method, if applicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_availability","","Returns the availability of this AST entity.",281,{"inputs":[{"name":"entity"}],"output":{"name":"availability"}}],[11,"get_bit_field_width","","Returns the width of this bit field, if applicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_canonical_entity","","Returns the canonical entity for this AST entity.",281,{"inputs":[{"name":"entity"}],"output":{"name":"entity"}}],[11,"get_comment","","Returns the comment associated with this AST entity, if any.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_comment_brief","","Returns the brief of the comment associated with this AST entity, if any.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_comment_range","","Returns the source range of the comment associated with this AST entity, if any.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_completion_string","","Returns a completion string for this declaration or macro definition, if applicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_children","","Returns the children of this AST entity.",281,{"inputs":[{"name":"entity"}],"output":{"name":"vec"}}],[11,"get_definition","","Returns the AST entity that describes the definition of this AST entity, if any.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_display_name","","Returns the display name of this AST entity, if any.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_enum_constant_value","","Returns the value of this enum constant declaration, if applicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_enum_underlying_type","","Returns the underlying type of this enum declaration, if applicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_file","","Returns the file included by this inclusion directive, if applicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_kind","","Returns the categorization of this AST entity.",281,{"inputs":[{"name":"entity"}],"output":{"name":"entitykind"}}],[11,"get_language","","Returns the language used by this declaration, if applicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_lexical_parent","","Returns the lexical parent of this AST entity, if any.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_linkage","","Returns the linkage of this AST entity, if any.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_location","","Returns the source location of this AST entity, if any.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_module","","Returns the module imported by this module import declaration, if applicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_name","","Returns the name of this AST entity, if any.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_name_ranges","","Returns the source ranges of the name of this AST entity.",281,{"inputs":[{"name":"entity"}],"output":{"name":"vec"}}],[11,"get_objc_attributes","","Returns which attributes were applied to this Objective-C property, if applicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_objc_ib_outlet_collection_type","","Returns the element type for this Objective-C `iboutletcollection` attribute, if applicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_objc_receiver_type","","Returns the type of the receiver of this Objective-C message, if applicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_objc_selector_index","","Returns the selector index for this Objective-C selector identifier, if applicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_objc_type_encoding","","Returns the type encoding for this Objective-C declaration, if applicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_objc_qualifiers","","Returns which qualifiers were applied to this Objective-C method return or parameter type,\nif applicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_overloaded_declarations","","Returns the overloaded declarations referenced by this overloaded declaration reference, if\napplicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_overridden_methods","","Returns the methods that were overridden by this method, if applicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_platform_availability","","Returns the availability of this declaration on the platforms where it is known, if\napplicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_range","","Returns the source range of this AST entity, if any.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_reference","","Returns the AST entity referred to by this AST entity, if any.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_semantic_parent","","Returns the semantic parent of this AST entity, if any.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_template","","Returns the template declaration this template specialization was instantiated from, if\napplicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_template_kind","","Returns the categorization of the template specialization that would result from\ninstantiating this template declaration, if applicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_translation_unit","","Returns the translation unit which contains this AST entity.",281,{"inputs":[{"name":"entity"}],"output":{"name":"translationunit"}}],[11,"get_type","","Returns the type of this AST entity, if any.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_typedef_underlying_type","","Returns the underlying type of this typedef declaration, if applicable.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"get_usr","","Returns the USR for this AST entity, if any.",281,{"inputs":[{"name":"entity"}],"output":{"name":"option"}}],[11,"is_bit_field","","Returns whether this AST entity is a bit field.",281,{"inputs":[{"name":"entity"}],"output":{"name":"bool"}}],[11,"is_const_method","","Returns whether this AST entity is a const method.",281,{"inputs":[{"name":"entity"}],"output":{"name":"bool"}}],[11,"is_definition","","Returns whether this AST entity is a declaration and also the definition of that\ndeclaration.",281,{"inputs":[{"name":"entity"}],"output":{"name":"bool"}}],[11,"is_dynamic_call","","Returns whether this AST entity is a dynamic call.",281,{"inputs":[{"name":"entity"}],"output":{"name":"bool"}}],[11,"is_objc_optional","","Returns whether this AST entity is an Objective-C method or property declaration with the\n`@optional` attribute applied to it.",281,{"inputs":[{"name":"entity"}],"output":{"name":"bool"}}],[11,"is_pure_virtual_method","","Returns whether this AST entity is a pure virtual method.",281,{"inputs":[{"name":"entity"}],"output":{"name":"bool"}}],[11,"is_static_method","","Returns whether this AST entity is a static method.",281,{"inputs":[{"name":"entity"}],"output":{"name":"bool"}}],[11,"is_variadic","","Returns whether this AST entity is a variadic function or method.",281,{"inputs":[{"name":"entity"}],"output":{"name":"bool"}}],[11,"is_virtual_base","","Returns whether this AST entity is a virtual base class specifier.",281,{"inputs":[{"name":"entity"}],"output":{"name":"bool"}}],[11,"is_virtual_method","","Returns whether this AST entity is a virtual method.",281,{"inputs":[{"name":"entity"}],"output":{"name":"bool"}}],[11,"visit_children","","Visits the children of this AST entity recursively and returns whether visitation was ended\nby the callback returning `EntityVisitResult::Break`.",281,{"inputs":[{"name":"entity"},{"name":"f"}],"output":{"name":"bool"}}],[11,"is_attribute","","Returns whether this AST entity is categorized as an attribute.",281,{"inputs":[{"name":"entity"}],"output":{"name":"bool"}}],[11,"is_declaration","","Returns whether this AST entity is categorized as a declaration.",281,{"inputs":[{"name":"entity"}],"output":{"name":"bool"}}],[11,"is_expression","","Returns whether this AST entity is categorized as an expression.",281,{"inputs":[{"name":"entity"}],"output":{"name":"bool"}}],[11,"is_preprocessing","","Returns whether this AST entity is categorized as a preprocessing entity.",281,{"inputs":[{"name":"entity"}],"output":{"name":"bool"}}],[11,"is_reference","","Returns whether this AST entity is categorized as a reference.",281,{"inputs":[{"name":"entity"}],"output":{"name":"bool"}}],[11,"is_statement","","Returns whether this AST entity is categorized as a statement.",281,{"inputs":[{"name":"entity"}],"output":{"name":"bool"}}],[11,"is_unexposed","","Returns whether the categorization of this AST entity is unexposed.",281,{"inputs":[{"name":"entity"}],"output":{"name":"bool"}}],[11,"eq","","",281,{"inputs":[{"name":"entity"},{"name":"entity"}],"output":{"name":"bool"}}],[11,"fmt","","",281,{"inputs":[{"name":"entity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",281,{"inputs":[{"name":"entity"},{"name":"h"}],"output":null}],[11,"clone","","",282,{"inputs":[{"name":"file"}],"output":{"name":"file"}}],[11,"get_id","","Returns a unique identifier for this file.",282,null],[11,"get_includes","","Returns the inclusion directives in this file.",282,{"inputs":[{"name":"file"}],"output":{"name":"vec"}}],[11,"get_location","","Returns the source location at the supplied line and column in this file.",282,{"inputs":[{"name":"file"},{"name":"u32"},{"name":"u32"}],"output":{"name":"sourcelocation"}}],[11,"get_module","","Returns the module containing this file, if any.",282,{"inputs":[{"name":"file"}],"output":{"name":"option"}}],[11,"get_offset_location","","Returns the source location at the supplied character offset in this file.",282,{"inputs":[{"name":"file"},{"name":"u32"}],"output":{"name":"sourcelocation"}}],[11,"get_path","","Returns the absolute path to this file.",282,{"inputs":[{"name":"file"}],"output":{"name":"pathbuf"}}],[11,"get_references","","Returns the references to the supplied entity in this file.",282,{"inputs":[{"name":"file"},{"name":"entity"}],"output":{"name":"vec"}}],[11,"get_skipped_ranges","","Returns the source ranges in this file that were skipped by the preprocessor.",282,{"inputs":[{"name":"file"}],"output":{"name":"vec"}}],[11,"get_time","","Returns the last modification time for this file.",282,{"inputs":[{"name":"file"}],"output":{"name":"time_t"}}],[11,"is_include_guarded","","Returns whether this file is guarded against multiple inclusions.",282,{"inputs":[{"name":"file"}],"output":{"name":"bool"}}],[11,"visit_includes","","Visits the inclusion directives in this file and returns whether visitation was ended by the\ncallback returning `false`.",282,{"inputs":[{"name":"file"},{"name":"f"}],"output":{"name":"bool"}}],[11,"visit_references","","Visits the references to the supplied entity in this file and returns whether visitation was\nended by the callback returning `false`.",282,{"inputs":[{"name":"file"},{"name":"entity"},{"name":"f"}],"output":{"name":"bool"}}],[11,"eq","","",282,{"inputs":[{"name":"file"},{"name":"file"}],"output":{"name":"bool"}}],[11,"fmt","","",282,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",282,{"inputs":[{"name":"file"},{"name":"h"}],"output":null}],[11,"hash","","",2,null],[11,"eq","","",2,{"inputs":[{"name":"formatoptions"},{"name":"formatoptions"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"formatoptions"},{"name":"formatoptions"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"formatoptions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"formatoptions"}],"output":{"name":"formatoptions"}}],[11,"from","","",2,{"inputs":[{"name":"formatoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"formatoptions"}}],[11,"into","","",2,{"inputs":[{"name":"formatoptions"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"default","","",2,{"inputs":[{"name":"formatoptions"}],"output":{"name":"formatoptions"}}],[11,"new","","Constructs a new `Index`.",283,{"inputs":[{"name":"index"},{"name":"clang"},{"name":"bool"},{"name":"bool"}],"output":{"name":"index"}}],[11,"get_thread_options","","Returns the thread options for this index.",283,{"inputs":[{"name":"index"}],"output":{"name":"threadoptions"}}],[11,"set_thread_options","","Sets the thread options for this index.",283,{"inputs":[{"name":"index"},{"name":"threadoptions"}],"output":null}],[11,"drop","","",283,{"inputs":[{"name":"index"}],"output":null}],[11,"fmt","","",283,{"inputs":[{"name":"index"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",3,null],[11,"eq","","",3,{"inputs":[{"name":"location"},{"name":"location"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"location"},{"name":"location"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"location"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"location"}],"output":{"name":"location"}}],[11,"clone","","",284,{"inputs":[{"name":"module"}],"output":{"name":"module"}}],[11,"get_file","","Returns the AST file this module came from.",284,{"inputs":[{"name":"module"}],"output":{"name":"file"}}],[11,"get_full_name","","Returns the full name of this module (e.g., `std.vector` for the `std.vector` module).",284,{"inputs":[{"name":"module"}],"output":{"name":"string"}}],[11,"get_name","","Returns the name of this module (e.g., `vector` for the `std.vector` module).",284,{"inputs":[{"name":"module"}],"output":{"name":"string"}}],[11,"get_parent","","Returns the parent of this module, if any.",284,{"inputs":[{"name":"module"}],"output":{"name":"option"}}],[11,"get_top_level_headers","","Returns the top-level headers in this module.",284,{"inputs":[{"name":"module"}],"output":{"name":"vec"}}],[11,"is_system","","Returns whether this module is a system module.",284,{"inputs":[{"name":"module"}],"output":{"name":"bool"}}],[11,"eq","","",284,{"inputs":[{"name":"module"},{"name":"module"}],"output":{"name":"bool"}}],[11,"fmt","","",284,{"inputs":[{"name":"module"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",4,null],[11,"eq","","",4,{"inputs":[{"name":"objcattributes"},{"name":"objcattributes"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"objcattributes"},{"name":"objcattributes"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"objcattributes"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"objcattributes"}],"output":{"name":"objcattributes"}}],[11,"from","","",4,{"inputs":[{"name":"objcattributes"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"objcattributes"}}],[11,"into","","",4,{"inputs":[{"name":"objcattributes"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"hash","","",5,null],[11,"eq","","",5,{"inputs":[{"name":"objcqualifiers"},{"name":"objcqualifiers"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"objcqualifiers"},{"name":"objcqualifiers"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"objcqualifiers"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"objcqualifiers"}],"output":{"name":"objcqualifiers"}}],[11,"from","","",5,{"inputs":[{"name":"objcqualifiers"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"objcqualifiers"}}],[11,"into","","",5,{"inputs":[{"name":"objcqualifiers"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"default","","",6,{"inputs":[{"name":"parseoptions"}],"output":{"name":"parseoptions"}}],[11,"hash","","",6,null],[11,"eq","","",6,{"inputs":[{"name":"parseoptions"},{"name":"parseoptions"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"parseoptions"},{"name":"parseoptions"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"parseoptions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"parseoptions"}],"output":{"name":"parseoptions"}}],[11,"from","","",6,{"inputs":[{"name":"parseoptions"},{"name":"cxtranslationunit_flags"}],"output":{"name":"parseoptions"}}],[11,"into","","",6,{"inputs":[{"name":"parseoptions"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"hash","","",7,null],[11,"eq","","",7,{"inputs":[{"name":"platformavailability"},{"name":"platformavailability"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"platformavailability"},{"name":"platformavailability"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"platformavailability"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"platformavailability"}],"output":{"name":"platformavailability"}}],[11,"clone","","",285,{"inputs":[{"name":"sourcelocation"}],"output":{"name":"sourcelocation"}}],[11,"get_entity","","Returns the AST entity at this source location, if any.",285,{"inputs":[{"name":"sourcelocation"}],"output":{"name":"option"}}],[11,"get_expansion_location","","Returns the file, line, column and character offset of this source location.",285,{"inputs":[{"name":"sourcelocation"}],"output":{"name":"location"}}],[11,"get_file_location","","Returns the file, line, column and character offset of this source location.",285,{"inputs":[{"name":"sourcelocation"}],"output":{"name":"location"}}],[11,"get_presumed_location","","Returns the file path, line, and column of this source location taking line directives into\naccount.",285,null],[11,"get_spelling_location","","Returns the file, line, column and character offset of this source location.",285,{"inputs":[{"name":"sourcelocation"}],"output":{"name":"location"}}],[11,"is_in_main_file","","Returns whether this source location is in the main file of its translation unit.",285,{"inputs":[{"name":"sourcelocation"}],"output":{"name":"bool"}}],[11,"is_in_system_header","","Returns whether this source location is in a system header.",285,{"inputs":[{"name":"sourcelocation"}],"output":{"name":"bool"}}],[11,"eq","","",285,{"inputs":[{"name":"sourcelocation"},{"name":"sourcelocation"}],"output":{"name":"bool"}}],[11,"fmt","","",285,{"inputs":[{"name":"sourcelocation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",285,{"inputs":[{"name":"sourcelocation"},{"name":"h"}],"output":null}],[11,"clone","","",286,{"inputs":[{"name":"sourcerange"}],"output":{"name":"sourcerange"}}],[11,"new","","Constructs a new `SourceRange` that spans [`start`, `end`).",286,{"inputs":[{"name":"sourcerange"},{"name":"sourcelocation"},{"name":"sourcelocation"}],"output":{"name":"sourcerange"}}],[11,"get_end","","Returns the exclusive end of this source range.",286,{"inputs":[{"name":"sourcerange"}],"output":{"name":"sourcelocation"}}],[11,"get_start","","Returns the inclusive start of this source range.",286,{"inputs":[{"name":"sourcerange"}],"output":{"name":"sourcelocation"}}],[11,"tokenize","","Tokenizes the source code covered by this source range and returns the resulting tokens.",286,{"inputs":[{"name":"sourcerange"}],"output":{"name":"vec"}}],[11,"eq","","",286,{"inputs":[{"name":"sourcerange"},{"name":"sourcerange"}],"output":{"name":"bool"}}],[11,"fmt","","",286,{"inputs":[{"name":"sourcerange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",286,{"inputs":[{"name":"sourcerange"},{"name":"h"}],"output":null}],[11,"default","","",8,{"inputs":[{"name":"threadoptions"}],"output":{"name":"threadoptions"}}],[11,"hash","","",8,null],[11,"eq","","",8,{"inputs":[{"name":"threadoptions"},{"name":"threadoptions"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"threadoptions"},{"name":"threadoptions"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"threadoptions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"threadoptions"}],"output":{"name":"threadoptions"}}],[11,"from","","",8,{"inputs":[{"name":"threadoptions"},{"name":"cxglobaloptflags"}],"output":{"name":"threadoptions"}}],[11,"into","","",8,{"inputs":[{"name":"threadoptions"}],"output":{"name":"cxglobaloptflags"}}],[11,"clone","","",287,{"inputs":[{"name":"token"}],"output":{"name":"token"}}],[11,"get_kind","","Returns the categorization of this token.",287,{"inputs":[{"name":"token"}],"output":{"name":"tokenkind"}}],[11,"get_location","","Returns the source location of this token.",287,{"inputs":[{"name":"token"}],"output":{"name":"sourcelocation"}}],[11,"get_range","","Returns the source range of this token.",287,{"inputs":[{"name":"token"}],"output":{"name":"sourcerange"}}],[11,"get_spelling","","Returns the textual representation of this token.",287,{"inputs":[{"name":"token"}],"output":{"name":"string"}}],[11,"fmt","","",287,{"inputs":[{"name":"token"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_ast","","Constructs a new `TranslationUnit` from an AST file.",288,{"inputs":[{"name":"translationunit"},{"name":"index"},{"name":"f"}],"output":{"name":"result"}}],[11,"from_source","","Constructs a new `TranslationUnit` from a source file.",288,null],[11,"annotate","","Returns the AST entities which correspond to the supplied tokens, if any.",288,null],[11,"complete","","Runs code completion at the supplied location.",288,null],[11,"get_diagnostics","","Returns the diagnostics for this translation unit.",288,{"inputs":[{"name":"translationunit"}],"output":{"name":"vec"}}],[11,"get_entity","","Returns the entity for this translation unit.",288,{"inputs":[{"name":"translationunit"}],"output":{"name":"entity"}}],[11,"get_file","","Returns the file at the supplied path in this translation unit, if any.",288,{"inputs":[{"name":"translationunit"},{"name":"f"}],"output":{"name":"option"}}],[11,"get_memory_usage","","Returns the memory usage of this translation unit.",288,{"inputs":[{"name":"translationunit"}],"output":{"name":"hashmap"}}],[11,"save","","Saves this translation unit to an AST file.",288,{"inputs":[{"name":"translationunit"},{"name":"f"}],"output":{"name":"result"}}],[11,"reparse","","Consumes this translation unit and reparses the source file it was created from with the\nsame compiler arguments that were used originally.",288,null],[11,"drop","","",288,{"inputs":[{"name":"translationunit"}],"output":null}],[11,"fmt","","",288,{"inputs":[{"name":"translationunit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",289,{"inputs":[{"name":"type"}],"output":{"name":"type"}}],[11,"get_alignof","","Returns the alignment of this type in bytes.",289,{"inputs":[{"name":"type"}],"output":{"name":"result"}}],[11,"get_argument_types","","Returns the argument types for this function or method type, if applicable.",289,{"inputs":[{"name":"type"}],"output":{"name":"option"}}],[11,"get_calling_convention","","Returns the calling convention specified for this function type, if applicable.",289,{"inputs":[{"name":"type"}],"output":{"name":"option"}}],[11,"get_canonical_type","","Returns the canonical type for this type.",289,{"inputs":[{"name":"type"}],"output":{"name":"type"}}],[11,"get_class_type","","Returns the class type for this member pointer type, if applicable.",289,{"inputs":[{"name":"type"}],"output":{"name":"option"}}],[11,"get_declaration","","Returns the AST entity that declared this type, if any.",289,{"inputs":[{"name":"type"}],"output":{"name":"option"}}],[11,"get_display_name","","Returns the display name of this type.",289,{"inputs":[{"name":"type"}],"output":{"name":"string"}}],[11,"get_element_type","","Returns the element type for this array, complex, or vector type, if applicable.",289,{"inputs":[{"name":"type"}],"output":{"name":"option"}}],[11,"get_offsetof","","Returns the offset of the field with the supplied name in this record type in bits.",289,{"inputs":[{"name":"type"},{"name":"f"}],"output":{"name":"result"}}],[11,"get_kind","","Returns the kind of this type.",289,{"inputs":[{"name":"type"}],"output":{"name":"typekind"}}],[11,"get_pointee_type","","Returns the pointee type for this pointer type, if applicable.",289,{"inputs":[{"name":"type"}],"output":{"name":"option"}}],[11,"get_ref_qualifier","","Returns the ref qualifier for this C++ function or method type, if applicable.",289,{"inputs":[{"name":"type"}],"output":{"name":"option"}}],[11,"get_result_type","","Returns the result type for this function or method type, if applicable.",289,{"inputs":[{"name":"type"}],"output":{"name":"option"}}],[11,"get_size","","Returns the size of this constant array or vector type, if applicable.",289,{"inputs":[{"name":"type"}],"output":{"name":"option"}}],[11,"get_sizeof","","Returns the size of this type in bytes.",289,{"inputs":[{"name":"type"}],"output":{"name":"result"}}],[11,"get_template_argument_types","","Returns the template argument types for this template class specialization type, if\napplicable.",289,{"inputs":[{"name":"type"}],"output":{"name":"option"}}],[11,"is_const_qualified","","Returns whether this type is qualified with const.",289,{"inputs":[{"name":"type"}],"output":{"name":"bool"}}],[11,"is_pod","","Returns whether this type is plain old data (POD).",289,{"inputs":[{"name":"type"}],"output":{"name":"bool"}}],[11,"is_restrict_qualified","","Returns whether this type is qualified with restrict.",289,{"inputs":[{"name":"type"}],"output":{"name":"bool"}}],[11,"is_variadic","","Returns whether this type is a variadic function type.",289,{"inputs":[{"name":"type"}],"output":{"name":"bool"}}],[11,"is_volatile_qualified","","Returns whether this type is qualified with volatile.",289,{"inputs":[{"name":"type"}],"output":{"name":"bool"}}],[11,"eq","","",289,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"fmt","","",289,{"inputs":[{"name":"type"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",290,null],[11,"eq","","",290,{"inputs":[{"name":"unsaved"},{"name":"unsaved"}],"output":{"name":"bool"}}],[11,"ne","","",290,{"inputs":[{"name":"unsaved"},{"name":"unsaved"}],"output":{"name":"bool"}}],[11,"fmt","","",290,{"inputs":[{"name":"unsaved"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",290,{"inputs":[{"name":"unsaved"}],"output":{"name":"unsaved"}}],[11,"new","","Constructs a new `Unsaved`.",290,{"inputs":[{"name":"unsaved"},{"name":"p"},{"name":"c"}],"output":{"name":"unsaved"}}],[11,"hash","","",291,null],[11,"cmp","","",291,{"inputs":[{"name":"usr"},{"name":"usr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",291,{"inputs":[{"name":"usr"},{"name":"usr"}],"output":{"name":"option"}}],[11,"lt","","",291,{"inputs":[{"name":"usr"},{"name":"usr"}],"output":{"name":"bool"}}],[11,"le","","",291,{"inputs":[{"name":"usr"},{"name":"usr"}],"output":{"name":"bool"}}],[11,"gt","","",291,{"inputs":[{"name":"usr"},{"name":"usr"}],"output":{"name":"bool"}}],[11,"ge","","",291,{"inputs":[{"name":"usr"},{"name":"usr"}],"output":{"name":"bool"}}],[11,"eq","","",291,{"inputs":[{"name":"usr"},{"name":"usr"}],"output":{"name":"bool"}}],[11,"ne","","",291,{"inputs":[{"name":"usr"},{"name":"usr"}],"output":{"name":"bool"}}],[11,"fmt","","",291,{"inputs":[{"name":"usr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",291,{"inputs":[{"name":"usr"}],"output":{"name":"usr"}}],[11,"from_objc_category","","Constructs a new `Usr` from an Objective-C category.",291,{"inputs":[{"name":"usr"},{"name":"c1"},{"name":"c2"}],"output":{"name":"usr"}}],[11,"from_objc_class","","Constructs a new `Usr` from an Objective-C class.",291,{"inputs":[{"name":"usr"},{"name":"c"}],"output":{"name":"usr"}}],[11,"from_objc_ivar","","Constructs a new `Usr` from an Objective-C instance variable.",291,{"inputs":[{"name":"usr"},{"name":"usr"},{"name":"n"}],"output":{"name":"usr"}}],[11,"from_objc_method","","Constructs a new `Usr` from an Objective-C method.",291,{"inputs":[{"name":"usr"},{"name":"usr"},{"name":"n"},{"name":"bool"}],"output":{"name":"usr"}}],[11,"from_objc_property","","Constructs a new `Usr` from an Objective-C property.",291,{"inputs":[{"name":"usr"},{"name":"usr"},{"name":"n"}],"output":{"name":"usr"}}],[11,"from_objc_protocol","","Constructs a new `Usr` from an Objective-C protocol.",291,{"inputs":[{"name":"usr"},{"name":"p"}],"output":{"name":"usr"}}],[11,"hash","","",9,null],[11,"eq","","",9,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"version"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"version"}],"output":{"name":"version"}}]],"paths":[[3,"CompletionContext"],[3,"CompletionOptions"],[3,"FormatOptions"],[3,"Location"],[3,"ObjCAttributes"],[3,"ObjCQualifiers"],[3,"ParseOptions"],[3,"PlatformAvailability"],[3,"ThreadOptions"],[3,"Version"],[4,"Accessibility"],[4,"AlignofError"],[4,"Availability"],[4,"CallingConvention"],[4,"CompletionChunk"],[4,"EntityKind"],[4,"EntityVisitResult"],[4,"FixIt"],[4,"Language"],[4,"Linkage"],[4,"MemoryUsage"],[4,"OffsetofError"],[4,"RefQualifier"],[4,"SaveError"],[4,"Severity"],[4,"SizeofError"],[4,"SourceError"],[4,"TokenKind"],[4,"TypeKind"],[3,"CXCodeCompleteResults"],[3,"CXCompletionResult"],[3,"CXCursor"],[3,"CXCursorAndRangeVisitor"],[3,"CXFileUniqueID"],[3,"CXIdxAttrInfo"],[3,"CXIdxBaseClassInfo"],[3,"CXIdxCXXClassDeclInfo"],[3,"CXIdxContainerInfo"],[3,"CXIdxDeclInfo"],[3,"CXIdxEntityInfo"],[3,"CXIdxEntityRefInfo"],[3,"CXIdxIBOutletCollectionAttrInfo"],[3,"CXIdxImportedASTFileInfo"],[3,"CXIdxIncludedFileInfo"],[3,"CXIdxLoc"],[3,"CXIdxObjCCategoryDeclInfo"],[3,"CXIdxObjCContainerDeclInfo"],[3,"CXIdxObjCInterfaceDeclInfo"],[3,"CXIdxObjCPropertyDeclInfo"],[3,"CXIdxObjCProtocolRefInfo"],[3,"CXIdxObjCProtocolRefListInfo"],[3,"CXPlatformAvailability"],[3,"CXSourceLocation"],[3,"CXSourceRange"],[3,"CXSourceRangeList"],[3,"CXString"],[3,"CXTUResourceUsage"],[3,"CXTUResourceUsageEntry"],[3,"CXToken"],[3,"CXType"],[3,"CXUnsavedFile"],[3,"CXVersion"],[3,"IndexerCallbacks"],[4,"CXAvailabilityKind"],[4,"CXCallingConv"],[4,"CXChildVisitResult"],[4,"CXCompilationDatabase_Error"],[4,"CXCompletionChunkKind"],[4,"CXCursorKind"],[4,"CXDiagnosticSeverity"],[4,"CXErrorCode"],[4,"CXIdxAttrKind"],[4,"CXIdxEntityCXXTemplateKind"],[4,"CXIdxEntityKind"],[4,"CXIdxEntityLanguage"],[4,"CXIdxEntityRefKind"],[4,"CXIdxObjCContainerKind"],[4,"CXLanguageKind"],[4,"CXLinkageKind"],[4,"CXLoadDiag_Error"],[4,"CXRefQualifierKind"],[4,"CXResult"],[4,"CXSaveError"],[4,"CXTUResourceUsageKind"],[4,"CXTokenKind"],[4,"CXTypeKind"],[4,"CXTypeLayoutError"],[4,"CXVisitorResult"],[4,"CX_CXXAccessSpecifier"],[3,"CXCodeComplete_Flags"],[3,"CXCompletionContext"],[3,"CXDiagnosticDisplayOptions"],[3,"CXGlobalOptFlags"],[3,"CXIdxDeclInfoFlags"],[3,"CXIndexOptFlags"],[3,"CXNameRefFlags"],[3,"CXObjCDeclQualifierKind"],[3,"CXObjCPropertyAttrKind"],[3,"CXReparse_Flags"],[3,"CXSaveTranslationUnit_Flags"],[3,"CXTranslationUnit_Flags"],[3,"CXCompilationDatabase"],[3,"CXCompileCommand"],[3,"CXCompileCommands"],[3,"CXCompletionString"],[3,"CXCursorSet"],[3,"CXDiagnostic"],[3,"CXDiagnosticSet"],[3,"CXFile"],[3,"CXIdxClientASTFile"],[3,"CXIdxClientContainer"],[3,"CXIdxClientEntity"],[3,"CXIdxClientFile"],[3,"CXIndex"],[3,"CXIndexAction"],[3,"CXModule"],[3,"CXModuleMapDescriptor"],[3,"CXRemapping"],[3,"CXTranslationUnit"],[3,"CXVirtualFileOverlay"],[8,"Nullable"],[3,"AtomicBool"],[3,"Wrapping"],[3,"Decoded"],[4,"FullDecoded"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[3,"Unpacked"],[4,"Sign"],[3,"Decimal"],[4,"ParseResult"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[3,"Big32x40"],[3,"Big8x3"],[3,"Fp"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[4,"Option"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[3,"Clang"],[3,"CompilationDatabase"],[3,"CompileCommand"],[3,"CompletionResult"],[3,"CompletionResults"],[3,"CompletionString"],[3,"Diagnostic"],[3,"Entity"],[3,"File"],[3,"Index"],[3,"Module"],[3,"SourceLocation"],[3,"SourceRange"],[3,"Token"],[3,"TranslationUnit"],[3,"Type"],[3,"Unsaved"],[3,"Usr"]]};
searchIndex['libc'] = {"items":[[0,"","libc","Crate docs",null,null],[3,"utimbuf","","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[3,"hostent","","",null,null],[12,"h_name","","",9,null],[12,"h_aliases","","",9,null],[12,"h_addrtype","","",9,null],[12,"h_length","","",9,null],[12,"h_addr_list","","",9,null],[3,"iovec","","",null,null],[12,"iov_base","","",10,null],[12,"iov_len","","",10,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",11,null],[12,"sa_data","","",11,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",12,null],[12,"sin_port","","",12,null],[12,"sin_addr","","",12,null],[12,"sin_zero","","",12,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",13,null],[12,"sin6_port","","",13,null],[12,"sin6_flowinfo","","",13,null],[12,"sin6_addr","","",13,null],[12,"sin6_scope_id","","",13,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",14,null],[12,"sun_path","","",14,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",15,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",16,null],[12,"ai_family","","",16,null],[12,"ai_socktype","","",16,null],[12,"ai_protocol","","",16,null],[12,"ai_addrlen","","",16,null],[12,"ai_addr","","",16,null],[12,"ai_canonname","","",16,null],[12,"ai_next","","",16,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",17,null],[12,"sll_protocol","","",17,null],[12,"sll_ifindex","","",17,null],[12,"sll_hatype","","",17,null],[12,"sll_pkttype","","",17,null],[12,"sll_halen","","",17,null],[12,"sll_addr","","",17,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",18,null],[12,"tm_min","","",18,null],[12,"tm_hour","","",18,null],[12,"tm_mday","","",18,null],[12,"tm_mon","","",18,null],[12,"tm_year","","",18,null],[12,"tm_wday","","",18,null],[12,"tm_yday","","",18,null],[12,"tm_isdst","","",18,null],[12,"tm_gmtoff","","",18,null],[12,"tm_zone","","",18,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",19,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",20,null],[12,"dli_fbase","","",20,null],[12,"dli_sname","","",20,null],[12,"dli_saddr","","",20,null],[3,"epoll_event","","",null,null],[12,"events","","",21,null],[12,"u64","","",21,null],[3,"utsname","","",null,null],[12,"sysname","","",22,null],[12,"nodename","","",22,null],[12,"release","","",22,null],[12,"version","","",22,null],[12,"machine","","",22,null],[12,"domainname","","",22,null],[3,"dirent","","",null,null],[12,"d_ino","","",23,null],[12,"d_off","","",23,null],[12,"d_reclen","","",23,null],[12,"d_type","","",23,null],[12,"d_name","","",23,null],[3,"dirent64","","",null,null],[12,"d_ino","","",24,null],[12,"d_off","","",24,null],[12,"d_reclen","","",24,null],[12,"d_type","","",24,null],[12,"d_name","","",24,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",25,null],[12,"rlim_max","","",25,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",26,null],[12,"gl_pathv","","",26,null],[12,"gl_offs","","",26,null],[12,"gl_flags","","",26,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",27,null],[12,"ifa_name","","",27,null],[12,"ifa_flags","","",27,null],[12,"ifa_addr","","",27,null],[12,"ifa_netmask","","",27,null],[12,"ifa_ifu","","",27,null],[12,"ifa_data","","",27,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",28,null],[12,"pw_passwd","","",28,null],[12,"pw_uid","","",28,null],[12,"pw_gid","","",28,null],[12,"pw_gecos","","",28,null],[12,"pw_dir","","",28,null],[12,"pw_shell","","",28,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",29,null],[12,"f_frsize","","",29,null],[12,"f_blocks","","",29,null],[12,"f_bfree","","",29,null],[12,"f_bavail","","",29,null],[12,"f_files","","",29,null],[12,"f_ffree","","",29,null],[12,"f_favail","","",29,null],[12,"f_fsid","","",29,null],[12,"f_flag","","",29,null],[12,"f_namemax","","",29,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",30,null],[12,"nl_pid","","",30,null],[12,"nl_groups","","",30,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",31,null],[12,"dqb_bsoftlimit","","",31,null],[12,"dqb_curspace","","",31,null],[12,"dqb_ihardlimit","","",31,null],[12,"dqb_isoftlimit","","",31,null],[12,"dqb_curinodes","","",31,null],[12,"dqb_btime","","",31,null],[12,"dqb_itime","","",31,null],[12,"dqb_valid","","",31,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",32,null],[12,"ssi_errno","","",32,null],[12,"ssi_code","","",32,null],[12,"ssi_pid","","",32,null],[12,"ssi_uid","","",32,null],[12,"ssi_fd","","",32,null],[12,"ssi_tid","","",32,null],[12,"ssi_band","","",32,null],[12,"ssi_overrun","","",32,null],[12,"ssi_trapno","","",32,null],[12,"ssi_status","","",32,null],[12,"ssi_int","","",32,null],[12,"ssi_ptr","","",32,null],[12,"ssi_utime","","",32,null],[12,"ssi_stime","","",32,null],[12,"ssi_addr","","",32,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",33,null],[12,"mq_maxmsg","","",33,null],[12,"mq_msgsize","","",33,null],[12,"mq_curmsgs","","",33,null],[3,"cpu_set_t","","",null,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",34,null],[12,"sa_mask","","",34,null],[12,"sa_flags","","",34,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",35,null],[12,"ss_flags","","",35,null],[12,"ss_size","","",35,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",36,null],[12,"si_errno","","",36,null],[12,"si_code","","",36,null],[12,"_pad","","",36,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",37,null],[12,"gl_pathv","","",37,null],[12,"gl_offs","","",37,null],[12,"gl_flags","","",37,null],[3,"ucred","","",null,null],[12,"pid","","",38,null],[12,"uid","","",38,null],[12,"gid","","",38,null],[3,"statfs","","",null,null],[12,"f_type","","",39,null],[12,"f_bsize","","",39,null],[12,"f_blocks","","",39,null],[12,"f_bfree","","",39,null],[12,"f_bavail","","",39,null],[12,"f_files","","",39,null],[12,"f_ffree","","",39,null],[12,"f_fsid","","",39,null],[12,"f_namelen","","",39,null],[12,"f_frsize","","",39,null],[3,"msghdr","","",null,null],[12,"msg_name","","",40,null],[12,"msg_namelen","","",40,null],[12,"msg_iov","","",40,null],[12,"msg_iovlen","","",40,null],[12,"msg_control","","",40,null],[12,"msg_controllen","","",40,null],[12,"msg_flags","","",40,null],[3,"termios","","",null,null],[12,"c_iflag","","",41,null],[12,"c_oflag","","",41,null],[12,"c_cflag","","",41,null],[12,"c_lflag","","",41,null],[12,"c_line","","",41,null],[12,"c_cc","","",41,null],[12,"c_ispeed","","",41,null],[12,"c_ospeed","","",41,null],[3,"flock","","",null,null],[12,"l_type","","",42,null],[12,"l_whence","","",42,null],[12,"l_start","","",42,null],[12,"l_len","","",42,null],[12,"l_pid","","",42,null],[3,"sigset_t","","",null,null],[3,"stat","","",null,null],[12,"st_dev","","",43,null],[12,"st_ino","","",43,null],[12,"st_nlink","","",43,null],[12,"st_mode","","",43,null],[12,"st_uid","","",43,null],[12,"st_gid","","",43,null],[12,"st_rdev","","",43,null],[12,"st_size","","",43,null],[12,"st_blksize","","",43,null],[12,"st_blocks","","",43,null],[12,"st_atime","","",43,null],[12,"st_atime_nsec","","",43,null],[12,"st_mtime","","",43,null],[12,"st_mtime_nsec","","",43,null],[12,"st_ctime","","",43,null],[12,"st_ctime_nsec","","",43,null],[3,"stat64","","",null,null],[12,"st_dev","","",44,null],[12,"st_ino","","",44,null],[12,"st_nlink","","",44,null],[12,"st_mode","","",44,null],[12,"st_uid","","",44,null],[12,"st_gid","","",44,null],[12,"st_rdev","","",44,null],[12,"st_size","","",44,null],[12,"st_blksize","","",44,null],[12,"st_blocks","","",44,null],[12,"st_atime","","",44,null],[12,"st_atime_nsec","","",44,null],[12,"st_mtime","","",44,null],[12,"st_mtime_nsec","","",44,null],[12,"st_ctime","","",44,null],[12,"st_ctime_nsec","","",44,null],[3,"pthread_attr_t","","",null,null],[3,"ipc_perm","","",null,null],[12,"__key","","",45,null],[12,"uid","","",45,null],[12,"gid","","",45,null],[12,"cuid","","",45,null],[12,"cgid","","",45,null],[12,"mode","","",45,null],[12,"__seq","","",45,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",46,null],[12,"shm_segsz","","",46,null],[12,"shm_atime","","",46,null],[12,"shm_dtime","","",46,null],[12,"shm_ctime","","",46,null],[12,"shm_cpid","","",46,null],[12,"shm_lpid","","",46,null],[12,"shm_nattch","","",46,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"putenv","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"usleep","","",null,null],[5,"recvfrom","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"mkfifo","","",null,null],[5,"getpwuid_r","","",null,null],[5,"posix_memalign","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"select","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_gettime","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fstat64","","",null,null],[5,"stat64","","",null,null],[5,"open64","","",null,null],[5,"creat64","","",null,null],[5,"lseek64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"mmap64","","",null,null],[5,"lstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"readdir64_r","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"unshare","","",null,null],[5,"syscall","","",null,null],[5,"sethostname","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"getnameinfo","","",null,null],[5,"eventfd","","",null,null],[5,"ptrace","","",null,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",47,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",47,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",47,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",47,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",47,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",47,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",47,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",47,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",47,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",47,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",47,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",47,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",47,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",47,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",47,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",47,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",47,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",47,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",47,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",47,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option<&T>` to an `Option<T>` by cloning the contents of the\noption.",47,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",47,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","core::num","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"fmt","","",48,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",48,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",48,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",48,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"eq","core::num::flt2dec::decoder","",49,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",49,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",50,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",50,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec","",51,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",51,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",51,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",51,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",51,null],[11,"clone","","",52,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",52,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",52,null],[11,"fmt","","",53,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",53,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",53,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num::dec2flt::rawfp","",54,{"inputs":[{"name":"unpacked"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",54,{"inputs":[{"name":"unpacked"}],"output":{"name":"unpacked"}}],[11,"new","","",54,{"inputs":[{"name":"unpacked"},{"name":"u64"},{"name":"i16"}],"output":{"name":"unpacked"}}],[11,"fmt","core::num::dec2flt::parse","",55,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",56,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"fmt","","",56,{"inputs":[{"name":"decimal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",56,null],[11,"eq","","",57,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"fmt","","",57,{"inputs":[{"name":"parseresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::dec2flt","",58,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",58,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",58,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",59,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",59,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",59,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum","Makes a bignum from one digit.",60,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"from_u64","","Makes a bignum from `u64` value.",60,{"inputs":[{"name":"big32x40"},{"name":"u64"}],"output":{"name":"big32x40"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",60,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",60,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",60,{"inputs":[{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",60,{"inputs":[{"name":"big32x40"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",60,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"add_small","","",60,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",60,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",60,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",60,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",60,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",60,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",60,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",60,null],[11,"eq","","",60,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",60,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"option"}}],[11,"cmp","","",60,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"ordering"}}],[11,"clone","","",60,{"inputs":[{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"fmt","","",60,{"inputs":[{"name":"big32x40"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum::tests","Makes a bignum from one digit.",61,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",61,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",61,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",61,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",61,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",61,{"inputs":[{"name":"big8x3"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",61,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"add_small","","",61,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",61,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",61,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",61,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",61,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",61,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",61,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",61,null],[11,"eq","","",61,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",61,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",61,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",61,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",61,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::num::diy_float","",62,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",62,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"mul","","Returns a correctly rounded product of itself and `other`.",62,{"inputs":[{"name":"fp"},{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize","","Normalizes itself so that the resulting mantissa is at least `2^63`.",62,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize_to","","Normalizes itself to have the shared exponent.\nIt can only decrease the exponent (and thus increase the mantissa).",62,{"inputs":[{"name":"fp"},{"name":"i16"}],"output":{"name":"fp"}}],[11,"fmt","core::num","",63,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",63,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",63,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",64,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",64,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",64,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",65,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",65,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",65,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",64,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",66,null],[11,"fmt","","",66,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",66,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",66,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",66,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",66,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",66,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",66,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",66,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",66,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",66,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",66,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",67,null],[11,"get","","Dereferences the content.",67,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",67,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",67,null],[11,"fmt","","",67,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",68,null],[11,"clone","","",68,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",68,null],[11,"fmt","","",68,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",69,null],[11,"eq","","",69,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",69,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",69,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",69,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"default","","",69,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",70,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",70,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",70,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",71,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",71,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",71,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",72,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",72,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",72,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",73,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",73,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",73,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",74,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",74,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",74,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",74,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",74,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",74,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","libc","",75,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",75,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",75,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",75,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",75,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",75,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",75,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",75,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",76,null],[11,"fmt","","",76,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",76,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",76,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",76,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",77,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",78,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",79,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",80,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",81,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",77,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",77,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",77,null],[11,"swap","","Stores a value into the bool, returning the old value.",77,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",77,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",77,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",77,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",77,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",77,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",78,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",78,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",78,null],[11,"swap","","Stores a value into the isize, returning the old value.",78,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",78,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",78,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",78,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",78,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",78,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",78,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",79,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",79,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",79,null],[11,"swap","","Stores a value into the usize, returning the old value.",79,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",79,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",79,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",79,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",79,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",79,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",79,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",80,null],[11,"load","","Loads a value from the pointer.",80,null],[11,"store","","Stores a value into the pointer.",80,null],[11,"swap","","Stores a value into the pointer, returning the old value.",80,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",80,null],[11,"fmt","","",79,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",78,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",77,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",80,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",82,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",82,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",82,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",82,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",82,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",82,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",82,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",83,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",83,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",83,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",84,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",84,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",84,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",84,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",84,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",84,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",84,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",84,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",84,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",85,null],[11,"clone","","",85,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",86,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",86,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",86,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",86,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",87,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",87,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",88,null],[11,"deref","","",87,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",87,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",89,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",89,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",89,null],[11,"clone","core::char","",90,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",91,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",90,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"size_hint","","",90,null],[11,"clone","","",92,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",93,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",92,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",92,null],[11,"clone","core::iter","",94,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",94,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"next_back","","",94,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",95,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",95,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"next_back","","",95,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",96,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",96,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"clone","","",97,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",98,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",97,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",97,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",97,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",97,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"next_back","","",97,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",99,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",99,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",99,null],[11,"next_back","","",99,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",100,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",100,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",100,null],[11,"next_back","","",100,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",101,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",101,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",101,null],[11,"next_back","","",101,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",102,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",102,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",102,null],[11,"next_back","","",102,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",103,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",103,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",103,null],[11,"nth","","",103,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",103,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",103,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",104,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",104,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",104,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",104,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",104,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",104,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",104,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks if the iterator has finished iterating.",104,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",105,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",105,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",105,null],[11,"clone","","",106,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",106,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",106,null],[11,"clone","","",107,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",107,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",107,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",107,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",107,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",107,null],[11,"clone","","",108,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",108,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",108,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",108,null],[11,"clone","","",109,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",109,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",109,null],[11,"clone","","",110,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",110,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",110,null],[11,"next_back","","",110,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",111,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",111,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",111,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",111,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",111,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",111,null],[11,"next_back","","",111,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",112,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",112,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",112,null],[11,"next_back","","",112,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",113,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",72,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",71,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",113,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",113,null],[11,"clone","","",114,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",114,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",114,null],[11,"next_back","","",114,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",113,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",113,null],[11,"next","core::ops","",71,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"next_back","","",71,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",72,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",115,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",115,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",115,null],[11,"next_back","","",115,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",116,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",116,null],[11,"next_back","","",116,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",116,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",116,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",116,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",117,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",117,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",117,null],[11,"next_back","","",117,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",117,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",47,null],[11,"fmt","","",47,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",47,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",47,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",47,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",47,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",47,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",47,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",47,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",47,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",47,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",47,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",118,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",118,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",118,null],[11,"next_back","","",118,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",119,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",119,null],[11,"next_back","","",119,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",119,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",120,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",120,null],[11,"next_back","","",120,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",121,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",121,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",121,null],[11,"next_back","","",121,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",47,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",122,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",123,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",124,null],[11,"fmt","","",124,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",124,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",124,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",124,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",124,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",124,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",124,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",124,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",124,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",124,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",124,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",124,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",124,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",124,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",124,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",124,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",124,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",124,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",124,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",124,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",124,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",124,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",124,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",124,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",124,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",124,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",124,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",124,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",124,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",125,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",125,null],[11,"next_back","","",125,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",125,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",126,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",126,null],[11,"next_back","","",126,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",127,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",127,null],[11,"next_back","","",127,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",124,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",128,null],[11,"next","","",128,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",128,null],[11,"count","","",128,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",128,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",128,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",128,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",128,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",129,null],[11,"next","","",129,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",129,null],[11,"count","","",129,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",129,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",129,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",129,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",130,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",130,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",130,null],[11,"next_back","","",130,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",130,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",131,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",131,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",131,null],[11,"next_back","","",131,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",132,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",132,null],[11,"next","","",133,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",133,null],[11,"next","","",134,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",134,null],[11,"next","","",135,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",135,null],[11,"next","","",136,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",136,null],[11,"clone","","",137,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",137,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",137,null],[11,"count","","",137,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",137,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",137,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",137,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",138,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",138,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",138,null],[11,"count","","",138,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",138,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",138,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",138,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",139,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",139,null],[11,"count","","",139,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",139,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",139,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",139,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",140,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",140,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",141,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",142,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",141,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",141,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",141,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",143,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",143,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",143,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",143,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",143,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",143,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",143,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",143,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",144,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",144,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",144,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",144,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",144,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",144,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",144,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",144,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",145,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",145,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",145,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",145,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",145,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",145,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",145,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",145,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",146,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",146,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",147,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",147,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",148,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",148,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",146,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",146,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",146,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",146,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",146,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",149,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",149,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",150,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",150,null],[11,"matching","","",150,null],[11,"use_early_reject","","",151,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",151,null],[11,"matching","","",151,null],[11,"eq","core::str","",152,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",152,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",152,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",153,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",153,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",153,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",153,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",153,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",153,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",154,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",154,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",154,null],[11,"next_back","","",154,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",154,{"inputs":[{"name":"chars"}],"output":{"name":"str"}}],[11,"clone","","",155,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",155,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",155,null],[11,"next_back","","",155,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",155,{"inputs":[{"name":"charindices"}],"output":{"name":"str"}}],[11,"clone","","",156,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"next","","",156,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",156,null],[11,"count","","",156,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"last","","",156,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"nth","","",156,{"inputs":[{"name":"bytes"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next_back","","",156,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",156,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",157,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",158,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",158,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",159,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",159,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",158,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",159,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",160,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",160,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",161,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",161,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",160,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",161,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",162,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",163,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",163,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",164,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",164,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",165,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",166,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",166,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",167,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",167,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",166,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",167,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",168,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",169,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",169,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",170,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",170,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",169,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",170,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",171,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",171,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",171,null],[11,"next_back","","",171,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",172,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",173,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",173,null],[11,"call_mut","","",173,null],[11,"call_once","","",173,null],[11,"next","","",172,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",172,null],[11,"next_back","","",172,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",174,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",175,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",175,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",175,null],[11,"finish","","",175,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",175,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",175,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",176,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",176,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",177,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",177,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",177,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",178,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",178,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",178,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",179,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",179,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",179,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",180,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",180,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",180,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",181,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",181,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",181,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",182,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",182,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",183,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",184,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",184,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",185,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",185,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",185,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",186,null],[11,"entry","","Adds a new entry to the set output.",187,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",187,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",187,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",188,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",188,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",188,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",189,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",189,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",189,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"clone","core::fmt::rt::v1","",190,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",191,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",192,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",192,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",192,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",193,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",194,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","core::fmt","",195,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",195,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",196,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",197,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",198,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",198,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",198,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",199,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",199,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",199,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",199,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",199,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",199,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",199,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",199,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",199,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"sign_plus","","Determines if the `+` flag was specified.",199,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_minus","","Determines if the `-` flag was specified.",199,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"alternate","","Determines if the `#` flag was specified.",199,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",199,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",199,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",199,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",199,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",199,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",199,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",199,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",199,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",199,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",195,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",69,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",82,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",87,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone_from","libc::dox","Performs copy-assignment from `source`.",200,null],[11,"clone_from","libc::dox::imp","Performs copy-assignment from `source`.",200,null],[11,"clone","libc","",43,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",44,{"inputs":[{"name":"stat64"}],"output":{"name":"stat64"}}],[11,"clone","","",201,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",202,{"inputs":[{"name":"sigset_t"}],"output":{"name":"sigset_t"}}],[11,"clone","","",34,{"inputs":[{"name":"sigaction"}],"output":{"name":"sigaction"}}],[11,"clone","","",35,{"inputs":[{"name":"stack_t"}],"output":{"name":"stack_t"}}],[11,"clone","","",36,{"inputs":[{"name":"siginfo_t"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",37,{"inputs":[{"name":"glob64_t"}],"output":{"name":"glob64_t"}}],[11,"clone","","",38,{"inputs":[{"name":"ucred"}],"output":{"name":"ucred"}}],[11,"clone","","",39,{"inputs":[{"name":"statfs"}],"output":{"name":"statfs"}}],[11,"clone","","",40,{"inputs":[{"name":"msghdr"}],"output":{"name":"msghdr"}}],[11,"clone","","",41,{"inputs":[{"name":"termios"}],"output":{"name":"termios"}}],[11,"clone","","",42,{"inputs":[{"name":"flock"}],"output":{"name":"flock"}}],[11,"clone","","",45,{"inputs":[{"name":"ipc_perm"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",46,{"inputs":[{"name":"shmid_ds"}],"output":{"name":"shmid_ds"}}],[11,"clone","","",23,{"inputs":[{"name":"dirent"}],"output":{"name":"dirent"}}],[11,"clone","","",24,{"inputs":[{"name":"dirent64"}],"output":{"name":"dirent64"}}],[11,"clone","","",25,{"inputs":[{"name":"rlimit64"}],"output":{"name":"rlimit64"}}],[11,"clone","","",26,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",27,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",203,{"inputs":[{"name":"pthread_mutex_t"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",204,{"inputs":[{"name":"pthread_rwlock_t"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",205,{"inputs":[{"name":"pthread_mutexattr_t"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",206,{"inputs":[{"name":"pthread_cond_t"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",28,{"inputs":[{"name":"passwd"}],"output":{"name":"passwd"}}],[11,"clone","","",29,{"inputs":[{"name":"statvfs"}],"output":{"name":"statvfs"}}],[11,"clone","","",30,{"inputs":[{"name":"sockaddr_nl"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",31,{"inputs":[{"name":"dqblk"}],"output":{"name":"dqblk"}}],[11,"clone","","",32,{"inputs":[{"name":"signalfd_siginfo"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",207,{"inputs":[{"name":"fsid_t"}],"output":{"name":"fsid_t"}}],[11,"clone","","",33,{"inputs":[{"name":"mq_attr"}],"output":{"name":"mq_attr"}}],[11,"clone","","",208,{"inputs":[{"name":"cpu_set_t"}],"output":{"name":"cpu_set_t"}}],[11,"clone","","",11,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",12,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",13,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",14,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",16,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",17,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",209,{"inputs":[{"name":"fd_set"}],"output":{"name":"fd_set"}}],[11,"clone","","",18,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"clone","","",19,{"inputs":[{"name":"sched_param"}],"output":{"name":"sched_param"}}],[11,"clone","","",20,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[11,"clone","","",21,{"inputs":[{"name":"epoll_event"}],"output":{"name":"epoll_event"}}],[11,"clone","","",22,{"inputs":[{"name":"utsname"}],"output":{"name":"utsname"}}],[11,"clone","","",0,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",1,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",2,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",3,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",4,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",5,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",6,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",8,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"hostent"}],"output":{"name":"hostent"}}],[11,"clone","","",10,{"inputs":[{"name":"iovec"}],"output":{"name":"iovec"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"rlim_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"mqd_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[17,"WNOHANG","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"CBAUD","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"MS_VERBOSE","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"EXTPROC","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MS_NOSEC","","",null,null],[17,"MS_BORN","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"AF_NETLINK","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"statvfs"],[3,"sockaddr_nl"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"stat"],[3,"stat64"],[3,"ipc_perm"],[3,"shmid_ds"],[4,"Option"],[3,"Wrapping"],[3,"Decoded"],[4,"FullDecoded"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[3,"Unpacked"],[4,"Sign"],[3,"Decimal"],[4,"ParseResult"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[3,"Big32x40"],[3,"Big8x3"],[3,"Fp"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[8,"Clone"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex['lazy_static'] = {"items":[[0,"","lazy_static","A macro for declaring lazily evaluated statics.",null,null],[14,"lazy_static!","","",null,null]],"paths":[]};
searchIndex['bitflags'] = {"items":[[0,"","bitflags","A typesafe bitmask flag generator.",null,null],[14,"bitflags!","","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
initSearch(searchIndex);
